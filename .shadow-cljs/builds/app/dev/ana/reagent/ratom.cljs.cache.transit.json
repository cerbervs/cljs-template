["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\ngoog.require('cljs.core');\ngoog.require('reagent.impl.util');\ngoog.require('reagent.debug');\ngoog.require('reagent.impl.batching');\ngoog.require('clojure.set');\ngoog.require('goog.object');\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\n} else {\nreagent.ratom.debug = false;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\n} else {\nreagent.ratom.generation = (0);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\n} else {\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn cljs.core.deref(reagent.ratom._running);\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nvar and__4120__auto__ = (len === reagent.ratom.arr_len(y));\nif(and__4120__auto__){\nvar i = (0);\nwhile(true){\nvar or__4131__auto__ = (i === len);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__31659 = (i + (1));\ni = G__31659;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__4120__auto__;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__31468 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31469 = obj;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31469;\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31468;\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\nr.captured = null;\n\nr.ratomGeneration = reagent.ratom.generation = (reagent.ratom.generation + (1));\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\nr.dirty_QMARK_ = false;\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5461__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5461__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn r.captured = [derefed];\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?this$.watchesArr = cljs.core.reduce_kv(((function (w){\nreturn (function (p1__31477_SHARP_,p2__31478_SHARP_,p3__31479_SHARP_){\nvar G__31480 = p1__31477_SHARP_;\nG__31480.push(p2__31478_SHARP_);\n\nG__31480.push(p3__31479_SHARP_);\n\nreturn G__31480;\n});})(w))\n,[],this$.watches):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_31665 = (a[i]);\nvar f_31666 = (a[(i + (1))]);\n(f_31666.cljs$core$IFn$_invoke$arity$4 ? f_31666.cljs$core$IFn$_invoke$arity$4(k_31665,this$,old,new$) : f_31666.call(null,k_31665,this$,old,new$));\n\nvar G__31667 = ((2) + i);\ni = G__31667;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__31483 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31484 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31484;\n\ntry{return cljs.core._deref(a);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31483;\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\n} else {\nreagent.ratom.rea_queue = null;\n}\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\nreagent.ratom.rea_queue = [];\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\nreagent.ratom.rea_queue = null;\n\nvar n__4607__auto___31670 = q.length;\nvar i_31671 = (0);\nwhile(true){\nif((i_31671 < n__4607__auto___31670)){\n(q[i_31671])._queued_run();\n\nvar G__31672 = (i_31671 + (1));\ni_31671 = G__31672;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\nreagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_;\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\n}\n}\n\nvar old_value = self__.state;\nself__.state = new_value;\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n});\n\nreagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RAtom.cljs$lang$type = true;\n\nreagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\";\n\nreagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RAtom\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__31500 = arguments.length;\nswitch (G__31500) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4751__auto__ = [];\nvar len__4730__auto___31676 = arguments.length;\nvar i__4731__auto___31677 = (0);\nwhile(true){\nif((i__4731__auto___31677 < len__4730__auto___31676)){\nargs_arr__4751__auto__.push((arguments[i__4731__auto___31677]));\n\nvar G__31679 = (i__4731__auto___31677 + (1));\ni__4731__auto___31677 = G__31679;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4752__auto__ = (new cljs.core.IndexedSeq(args_arr__4751__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4752__auto__);\n\n}\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__31501){\nvar map__31502 = p__31501;\nvar map__31502__$1 = (((((!((map__31502 == null))))?(((((map__31502.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31502.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31502):map__31502);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31502__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31502__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n});\n\n/** @this {Function} */\nreagent.ratom.atom.cljs$lang$applyTo = (function (seq31497){\nvar G__31498 = cljs.core.first(seq31497);\nvar seq31497__$1 = cljs.core.next(seq31497);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31498,seq31497__$1);\n});\n\nreagent.ratom.atom.cljs$lang$maxFixedArity = (1);\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__31510 = f;\nvar G__31511 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__31512 = ((function (G__31510,G__31511,m,m__$1,r){\nreturn (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __31690 = o.reagReactionCache;\nvar __31691__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__31690,k);\no.reagReactionCache = __31691__$1;\n\nif((!((obj == null)))){\nobj.reaction = null;\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});})(G__31510,G__31511,m,m__$1,r))\n;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__31510,G__31511,G__31512) : reagent.ratom.make_reaction.call(null,G__31510,G__31511,G__31512));\n})();\nvar v = cljs.core._deref(r__$1);\no.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1);\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\nobj.reaction = r__$1;\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\nreagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5459__auto__ = self__.reaction;\nif((temp__5459__auto__ == null)){\nreturn reagent.ratom.cached_reaction(((function (temp__5459__auto__,this$__$1){\nreturn (function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n});})(temp__5459__auto__,this$__$1))\n,self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5459__auto__;\nreturn cljs.core._deref(r);\n}\n});\n\nreagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n});\n\nreagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Track.cljs$lang$type = true;\n\nreagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\";\n\nreagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Track\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__31522 = ((function (t){\nreturn (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});})(t))\n;\nvar G__31523 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__31524 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__31522,G__31523,G__31524) : reagent.ratom.make_reaction.call(null,G__31522,G__31523,G__31524));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___31696 = arguments.length;\nvar i__4731__auto___31697 = (0);\nwhile(true){\nif((i__4731__auto___31697 < len__4730__auto___31696)){\nargs__4736__auto__.push((arguments[i__4731__auto___31697]));\n\nvar G__31699 = (i__4731__auto___31697 + (1));\ni__4731__auto___31697 = G__31699;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track(f,args);\n});\n\nreagent.ratom.track.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track.cljs$lang$applyTo = (function (seq31525){\nvar G__31526 = cljs.core.first(seq31525);\nvar seq31525__$1 = cljs.core.next(seq31525);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31526,seq31525__$1);\n});\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___31701 = arguments.length;\nvar i__4731__auto___31703 = (0);\nwhile(true){\nif((i__4731__auto___31703 < len__4730__auto___31701)){\nargs__4736__auto__.push((arguments[i__4731__auto___31703]));\n\nvar G__31706 = (i__4731__auto___31703 + (1));\ni__4731__auto___31703 = G__31706;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n});\n\nreagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq31530){\nvar G__31531 = cljs.core.first(seq31530);\nvar seq31530__$1 = cljs.core.next(seq31530);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31531,seq31530__$1);\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__31542 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31543 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31543;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31542;\n}});\n\nreagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\nself__.state = newstate;\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n});\n\nreagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31551 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31551) : f.call(null,G__31551));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31553 = a__$1._peek();\nvar G__31554 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31553,G__31554) : f.call(null,G__31553,G__31554));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31555 = a__$1._peek();\nvar G__31556 = x;\nvar G__31557 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31555,G__31556,G__31557) : f.call(null,G__31555,G__31556,G__31557));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5459__auto__ = self__.reaction;\nif((temp__5459__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?((function (temp__5459__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n});})(temp__5459__auto__,oldstate,this$__$1))\n:((function (temp__5459__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n});})(temp__5459__auto__,oldstate,this$__$1))\n);\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5459__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n});\n\nreagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RCursor.cljs$lang$type = true;\n\nreagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\";\n\nreagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RCursor\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\nif((function (){var or__4131__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\"Assert failed: \",[\"src must be a reactive atom or a function, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)),\" while attempting to get path: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0))].join(''),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5461__auto__ = v.destroy;\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5461__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5459__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5459__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5459__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\n} else {\nvar m__4431__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n}\n});\n\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4434__auto__.call(null,this$,f));\n} else {\nvar m__4431__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4431__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.run[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\n} else {\nvar m__4431__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__31577 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31578 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31578;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31577;\n}});\n\nreagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\nself__.dirty_QMARK_ = true;\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n});\n\nreagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\nself__.watching = derefed;\n\nvar seq__31581_31738 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__31582_31739 = null;\nvar count__31583_31740 = (0);\nvar i__31584_31741 = (0);\nwhile(true){\nif((i__31584_31741 < count__31583_31740)){\nvar w_31742 = chunk__31582_31739.cljs$core$IIndexed$_nth$arity$2(null,i__31584_31741);\ncljs.core._add_watch(w_31742,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__31743 = seq__31581_31738;\nvar G__31744 = chunk__31582_31739;\nvar G__31745 = count__31583_31740;\nvar G__31746 = (i__31584_31741 + (1));\nseq__31581_31738 = G__31743;\nchunk__31582_31739 = G__31744;\ncount__31583_31740 = G__31745;\ni__31584_31741 = G__31746;\ncontinue;\n} else {\nvar temp__5457__auto___31747 = cljs.core.seq(seq__31581_31738);\nif(temp__5457__auto___31747){\nvar seq__31581_31750__$1 = temp__5457__auto___31747;\nif(cljs.core.chunked_seq_QMARK_(seq__31581_31750__$1)){\nvar c__4550__auto___31751 = cljs.core.chunk_first(seq__31581_31750__$1);\nvar G__31752 = cljs.core.chunk_rest(seq__31581_31750__$1);\nvar G__31753 = c__4550__auto___31751;\nvar G__31754 = cljs.core.count(c__4550__auto___31751);\nvar G__31755 = (0);\nseq__31581_31738 = G__31752;\nchunk__31582_31739 = G__31753;\ncount__31583_31740 = G__31754;\ni__31584_31741 = G__31755;\ncontinue;\n} else {\nvar w_31756 = cljs.core.first(seq__31581_31750__$1);\ncljs.core._add_watch(w_31756,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__31757 = cljs.core.next(seq__31581_31750__$1);\nvar G__31758 = null;\nvar G__31759 = (0);\nvar G__31760 = (0);\nseq__31581_31738 = G__31757;\nchunk__31582_31739 = G__31758;\ncount__31583_31740 = G__31759;\ni__31584_31741 = G__31760;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__31591 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__31592 = null;\nvar count__31593 = (0);\nvar i__31594 = (0);\nwhile(true){\nif((i__31594 < count__31593)){\nvar w = chunk__31592.cljs$core$IIndexed$_nth$arity$2(null,i__31594);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__31764 = seq__31591;\nvar G__31765 = chunk__31592;\nvar G__31766 = count__31593;\nvar G__31767 = (i__31594 + (1));\nseq__31591 = G__31764;\nchunk__31592 = G__31765;\ncount__31593 = G__31766;\ni__31594 = G__31767;\ncontinue;\n} else {\nvar temp__5457__auto__ = cljs.core.seq(seq__31591);\nif(temp__5457__auto__){\nvar seq__31591__$1 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__31591__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__31591__$1);\nvar G__31768 = cljs.core.chunk_rest(seq__31591__$1);\nvar G__31769 = c__4550__auto__;\nvar G__31770 = cljs.core.count(c__4550__auto__);\nvar G__31771 = (0);\nseq__31591 = G__31768;\nchunk__31592 = G__31769;\ncount__31593 = G__31770;\ni__31594 = G__31771;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__31591__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__31772 = cljs.core.next(seq__31591__$1);\nvar G__31773 = null;\nvar G__31774 = (0);\nvar G__31775 = (0);\nseq__31591 = G__31772;\nchunk__31592 = G__31773;\ncount__31593 = G__31774;\ni__31594 = G__31775;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n\nreagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{self__.caught = null;\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e31603){var e = e31603;\nself__.state = e;\n\nself__.caught = e;\n\nreturn self__.dirty_QMARK_ = false;\n}});\n\nreagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\nself__.state = res;\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n});\n\nreagent.ratom.Reaction.prototype._set_opts = (function (p__31613){\nvar self__ = this;\nvar map__31614 = p__31613;\nvar map__31614__$1 = (((((!((map__31614 == null))))?(((((map__31614.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31614.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31614):map__31614);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31614__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31614__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31614__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31614__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\nthis$.auto_run = auto_run__$1;\n} else {\n}\n\nif((!((on_set == null)))){\nthis$.on_set = on_set;\n} else {\n}\n\nif((!((on_dispose == null)))){\nthis$.on_dispose = on_dispose;\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn this$.nocache_QMARK_ = no_cache;\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\nself__.watching = null;\n\nself__.state = null;\n\nself__.auto_run = null;\n\nself__.dirty_QMARK_ = true;\n\nvar seq__31619_31797 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__31620_31798 = null;\nvar count__31621_31799 = (0);\nvar i__31622_31800 = (0);\nwhile(true){\nif((i__31622_31800 < count__31621_31799)){\nvar w_31801 = chunk__31620_31798.cljs$core$IIndexed$_nth$arity$2(null,i__31622_31800);\ncljs.core._remove_watch(w_31801,this$__$1);\n\n\nvar G__31802 = seq__31619_31797;\nvar G__31803 = chunk__31620_31798;\nvar G__31804 = count__31621_31799;\nvar G__31805 = (i__31622_31800 + (1));\nseq__31619_31797 = G__31802;\nchunk__31620_31798 = G__31803;\ncount__31621_31799 = G__31804;\ni__31622_31800 = G__31805;\ncontinue;\n} else {\nvar temp__5457__auto___31806 = cljs.core.seq(seq__31619_31797);\nif(temp__5457__auto___31806){\nvar seq__31619_31807__$1 = temp__5457__auto___31806;\nif(cljs.core.chunked_seq_QMARK_(seq__31619_31807__$1)){\nvar c__4550__auto___31808 = cljs.core.chunk_first(seq__31619_31807__$1);\nvar G__31809 = cljs.core.chunk_rest(seq__31619_31807__$1);\nvar G__31810 = c__4550__auto___31808;\nvar G__31811 = cljs.core.count(c__4550__auto___31808);\nvar G__31812 = (0);\nseq__31619_31797 = G__31809;\nchunk__31620_31798 = G__31810;\ncount__31621_31799 = G__31811;\ni__31622_31800 = G__31812;\ncontinue;\n} else {\nvar w_31855 = cljs.core.first(seq__31619_31807__$1);\ncljs.core._remove_watch(w_31855,this$__$1);\n\n\nvar G__31856 = cljs.core.next(seq__31619_31807__$1);\nvar G__31857 = null;\nvar G__31858 = (0);\nvar G__31859 = (0);\nseq__31619_31797 = G__31856;\nchunk__31620_31798 = G__31857;\ncount__31621_31799 = G__31858;\ni__31622_31800 = G__31859;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5461__auto__ = this$__$1.on_dispose_arr;\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5461__auto__;\nvar n__4607__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4607__auto__)){\nvar fexpr__31623_31860 = (a[i]);\n(fexpr__31623_31860.cljs$core$IFn$_invoke$arity$1 ? fexpr__31623_31860.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__31623_31860.call(null,this$__$1));\n\nvar G__31861 = (i + (1));\ni = G__31861;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5459__auto__ = this$__$1.on_dispose_arr;\nif((temp__5459__auto__ == null)){\nreturn this$__$1.on_dispose_arr = [f__$1];\n} else {\nvar a = temp__5459__auto__;\nreturn a.push(f__$1);\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\n}\n\nvar oldval = self__.state;\nself__.state = newval;\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31624 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__31624) : f__$1.call(null,G__31624));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31625 = a__$1._peek_at();\nvar G__31626 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__31625,G__31626) : f__$1.call(null,G__31625,G__31626));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31627 = a__$1._peek_at();\nvar G__31628 = x;\nvar G__31629 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__31627,G__31628,G__31629) : f__$1.call(null,G__31627,G__31628,G__31629));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5461__auto___31865 = self__.caught;\nif((temp__5461__auto___31865 == null)){\n} else {\nvar e_31866 = temp__5461__auto___31865;\nthrow e_31866;\n}\n\nvar non_reactive_31867 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_31867){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_31867) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_31868 = self__.state;\nself__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_31868,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_31868,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n});\n\nreagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Reaction.cljs$lang$type = true;\n\nreagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\";\n\nreagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Reaction\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___31869 = arguments.length;\nvar i__4731__auto___31870 = (0);\nwhile(true){\nif((i__4731__auto___31870 < len__4730__auto___31869)){\nargs__4736__auto__.push((arguments[i__4731__auto___31870]));\n\nvar G__31871 = (i__4731__auto___31870 + (1));\ni__4731__auto___31870 = G__31871;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__31637){\nvar map__31638 = p__31637;\nvar map__31638__$1 = (((((!((map__31638 == null))))?(((((map__31638.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31638.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31638):map__31638);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31638__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31638__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31638__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n});\n\nreagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq31635){\nvar G__31636 = cljs.core.first(seq31635);\nvar seq31635__$1 = cljs.core.next(seq31635);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31636,seq31635__$1);\n});\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n\nr._set_opts(opts);\n\nr.f = f;\n\nr.auto_run = ((function (r,res){\nreturn (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n});})(r,res))\n;\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\nreagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(''));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\nself__.changed = true;\n\nself__.state = newval;\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n});\n\nreagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Wrapper.cljs$lang$type = true;\n\nreagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\";\n\nreagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Wrapper\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^B"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^I",["^J",[["~$&","^L"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^M","~$reagent.ratom/reaction","^O","^P","^Q",true],"~$run!",["^ ","^I",["^J",[["~$&","^L"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^M","~$reagent.ratom/run!","^O","^P","^Q",true]],"^M","^P","~:op","^O","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^Z","~$obj","~$goog.object","~$cljs.core","^11","~$goog","^12","^10","^10","~$reagent.impl.batching","^13","~$clojure.set","^14","~$util","^Z","~$s","^14","~$batch","^13","^B","^B"],"~:seen",["^E",["~:require","~:require-macros"]],"~:uses",null,"^19",["^ ","^P","^P","^B","^B","^11","^11"],"~:form",["^J",["~$ns","^P",["^J",["~:refer-clojure","~:exclude",["^F"]]],["^J",["^19",["^P"]]],["^J",["^18",["^Z","~:as","^15"],["^B","~:refer-macros",["^A","^C"]],["^13","^1?","^16"],["^14","^1?","~$s"],["^10","^1?","^["]]]]],"~:flags",["^ ","^19",["^E",[]],"^18",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^12","^11","^Z","^B","^13","^14","^10"]],"^O","^P","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1587374060049,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^E",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__4120__auto__","i","or__4131__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__31468","*ratom-context*-temp-val__31469","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5461__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.ratom/remove-w","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","reagent.ratom/notify-w","a","p1__31477#","p2__31478#","p3__31479#","cljs.core/reduce-kv","G__31480","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__31483","*ratom-context*-temp-val__31484","cljs.core/-deref","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4607__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","more","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","_","new-meta","goog/getUid","var_args","G__31500","reagent.ratom/atom","args-arr__4751__auto__","len__4730__auto__","i__4731__auto__","argseq__4752__auto__","cljs.core/IndexedSeq","p__31501","map__31502","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq31497","G__31498","cljs.core/first","cljs.core/next","self__4717__auto__","reagent.ratom/cached-reaction","destroy","m","G__31510","G__31511","G__31512","reagent.ratom/make-reaction","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5459__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__31522","G__31523","G__31524","args__4736__auto__","argseq__4737__auto__","reagent.ratom/track","seq31525","G__31526","cljs.core/ifn?","reagent.ratom/track!","seq31530","G__31531","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__31542","*ratom-context*-temp-val__31543","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/reset!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","G__31551","G__31553","G__31554","G__31555","G__31556","G__31557","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4433__auto__","m__4434__auto__","reagent.ratom/dispose!","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__31613","map__31614","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__31624","G__31625","G__31626","G__31627","G__31628","G__31629","*ratom-context*-orig-val__31577","*ratom-context*-temp-val__31578","cljs.core/set","seq__31581","cljs.core/seq","chunk__31582","count__31583","i__31584","temp__5457__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","cljs.core/-add-watch","seq__31591","chunk__31592","count__31593","i__31594","cljs.core/-remove-watch","e31603","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__31619","chunk__31620","count__31621","i__31622","fexpr__31623","p__31637","map__31638","seq31635","G__31636","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]]],"~:cache-keys",["~#cmap",[["^1E","reagent/impl/batching.cljs"],[1587059915039,"^12","^11","^B","^Z"],["^Q","^11"],[1587365553000],["^1E","goog/math/math.js"],[1584607223013,"^12","~$goog.array","~$goog.asserts"],["^Q","^B"],[1587059915000],["^1E","goog/array/array.js"],[1584607223013,"^12","^1S"],["^1E","reagent/impl/util.cljs"],[1587059915039,"^12","^11","~$clojure.string"],["^1E","goog/debug/error.js"],[1584607223013,"^12"],["^1E","goog/dom/nodetype.js"],[1584607223013,"^12"],["^1E","reagent/ratom.cljs"],[1587059915039,"^12","^11","^Z","^B","^13","^14","^10"],["^1E","goog/object/object.js"],[1584607223013,"^12"],"~:SHADOW-TIMESTAMP",[1587365557000,1587365553000],["^Q","^P"],[1587059915000],["^1E","goog/math/long.js"],[1584607223013,"^12","^1S","~$goog.reflect"],["^1E","goog/functions/functions.js"],[1584607223013,"^12"],["^1E","goog/structs/map.js"],[1584607223013,"^12","~$goog.iter.Iterator","~$goog.iter.StopIteration","^10"],["^1E","goog/asserts/asserts.js"],[1584607223013,"^12","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1E","goog/uri/uri.js"],[1584607223013,"^12","^1R","^1S","^1[","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1E","goog/base.js"],[1584607223013],["^1E","goog/structs/structs.js"],[1584607223013,"^12","^1R","^10"],["^1E","clojure/string.cljs"],[1587365553008,"^12","^11","^1[","~$goog.string.StringBuffer"],["^1E","goog/string/string.js"],[1584607223013,"^12"],["^1E","goog/reflect/reflect.js"],[1584607223013,"^12"],["^1E","goog/string/stringbuffer.js"],[1584607223013,"^12"],["^1E","goog/iter/iter.js"],[1584607223013,"^12","^1R","^1S","~$goog.functions","~$goog.math"],["^1E","cljs/core.cljs"],[1587365553008,"~$goog.math.Long","~$goog.math.Integer","^1[","^10","^1R","~$goog.Uri","^25"],["^1E","reagent/debug.cljs"],[1587059915039,"^12","^11"],["^1E","goog/math/integer.js"],[1584607223013,"^12"],["^1E","clojure/set.cljs"],[1587365553008,"^12","^11"],["^1E","goog/uri/utils.js"],[1584607223013,"^12","^1R","^1S","^1["]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?"],"~:shadow/protocol-prefixes",["^E",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^@",["^ ","^A","^B","^C","^B"],"^D",["^E",["^F"]],"^G",["^ ","^H",["^ ","^I",["^J",[["^K","~$&","^L"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","^M","^N","^O","^P","^Q",true],"^R",["^ ","^I",["^J",[["~$&","^L"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^M","^S","^O","^P","^Q",true],"^T",["^ ","^I",["^J",[["~$&","^L"]]],"^U","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^M","^V","^O","^P","^Q",true]],"~:shadow/js-access-properties",["^E",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^M","^P","^X",null,"^Y",["^ ","^Z","^Z","^[","^10","^11","^11","^12","^12","^10","^10","^13","^13","^14","^14","^15","^Z","~$s","^14","^16","^13","^B","^B"],"^17",["^E",["^18","^19"]],"~:shadow/js-access-global",["^E",["Error"]],"^1:",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",105,"^8",8,"^9",105,"^:",15,"~:private",true,"^I",["^J",["~$quote",["^J",[["~$a","~$writer","~$opts","~$s"]]]]]],"^2B",true,"^M","~$reagent.ratom/pr-atom","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^J",[["~$a","^2D","^2E","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^8",1,"~:variadic?",false,"^7",105,"~:ret-tag","~$any","^9",105,"~:max-fixed-arity",4,"~:fn-var",true,"^I",["^J",["^2C",["^J",[["~$a","^2D","^2E","~$s"]]]]]],"~$->RCursor",["^ ","^2A",null,"^5",["^ ","~:protocols",["^E",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","~$reagent.ratom/IReactiveAtom","~$cljs.core/IDeref","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",257,"^9",257,"^I",["^J",["^2C",["^J",[["~$ratom","~$path","^R","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/RCursor."],"^2P",["^E",["^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X","^2Y","^2Z"]],"^M","~$reagent.ratom/->RCursor","^6","reagent/ratom.cljs","^:",17,"^2G",["^J",[["^31","^32","^R","^33","^34"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^2[","^30","^7",257,"^2K","~$reagent.ratom/RCursor","^9",257,"^2M",5,"^2N",true,"^I",["^J",["^2C",["^J",[["^31","^32","^R","^33","^34"]]]]],"^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",63,"^8",8,"^9",63,"^:",29,"^2B",true,"^I",["^J",["^2C",["^J",[["~$derefed"]]]]],"^U","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^2B",true,"^M","~$reagent.ratom/notify-deref-watcher!","^6","reagent/ratom.cljs","^:",29,"^2G",["^J",[["^39"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",63,"^2K",["^E",[null,"^2L","~$clj-nil"]],"^9",63,"^2M",1,"^2N",true,"^I",["^J",["^2C",["^J",[["^39"]]]]],"^U","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",8,"^9",115,"^:",19,"^2B",true,"^I",["^J",["^2C",["^J",[["~$r"]]]]]],"^2B",true,"^M","~$reagent.ratom/rea-enqueue","^6","reagent/ratom.cljs","^:",19,"^2G",["^J",[["~$r"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",115,"^2K","^2L","^9",115,"^2M",1,"^2N",true,"^I",["^J",["^2C",["^J",[["~$r"]]]]]],"~$in-context",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",36,"^8",8,"^9",36,"^:",18,"^2B",true,"^I",["^J",["^2C",["^J",[["^[","~$f"]]]]],"^U","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^2B",true,"^M","~$reagent.ratom/in-context","^6","reagent/ratom.cljs","^:",18,"^2G",["^J",[["^[","~$f"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",36,"^9",36,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["^[","~$f"]]]]],"^U","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",237,"^8",7,"^9",237,"^:",17,"^I",["^J",["^2C",["^J",[["~$f","~$args"]]]]]],"^M","~$reagent.ratom/make-track","^6","reagent/ratom.cljs","^:",17,"^2G",["^J",[["~$f","^3A"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",237,"^2K","~$reagent.ratom/Track","^9",237,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f","^3A"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^2P",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2X","~$cljs.core/IMeta","^2Y","^2Z","~$cljs.core/IWithMeta"]],"^M","~$reagent.ratom/RAtom","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",137,"~:record",false,"^9",137,"~:tag","~$function","^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^3F","^2Y","^2Z","^3G"]]],"^F",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",7,"^9",182,"^:",11,"^I",["^J",["^2C",["^J",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^U","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^2J",true,"~:fixed-arity",1,"^2M",1,"^2G",["^J",[["~$x"]]],"^I",["^J",[["~$x"],["~$x","~$&",["^ ","^3M",["^3N","^3O"]]]]],"^2I",["^J",[null,null]]]],"^M","~$reagent.ratom/atom","^6","reagent/ratom.cljs","^:",11,"^3P",["^ ","^2J",true,"^3Q",1,"^2M",1,"^2G",["^J",[["~$x"]]],"^I",["^J",[["~$x"],["~$x","~$&",["^ ","^3M",["^3N","^3O"]]]]],"^2I",["^J",[null,null]]],"^2G",["^J",[["~$x"]]],"^2H",null,"^3Q",1,"^2I",["^J",[null,null]],"^8",1,"^2J",true,"~:methods",[["^ ","^3Q",1,"^2J",false,"^3K","^3H"],["^ ","^3Q",1,"^2J",true,"^3K","^3H"]],"^7",182,"^9",182,"^2M",1,"^2N",true,"^I",["^J",[["~$x"],["~$x","~$&",["^ ","^3M",["^3N","^3O"]]]]],"^U","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",89,"^8",8,"^9",89,"^:",16,"^2B",true,"^I",["^J",["^2C",["^J",[["~$this","~$old","~$new"]]]]]],"^2B",true,"^M","~$reagent.ratom/notify-w","^6","reagent/ratom.cljs","^:",16,"^2G",["^J",[["^3U","^3V","^3W"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",89,"^2K","^3;","^9",89,"^2M",3,"^2N",true,"^I",["^J",["^2C",["^J",[["^3U","^3V","^3W"]]]]]],"~$->Reaction",["^ ","^2A",null,"^5",["^ ","^2P",["^E",["^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X","~$reagent.ratom/IRunnable","~$reagent.ratom/IDisposable","^2Y","^2Z"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^2[","^30","^7",365,"^9",365,"^I",["^J",["^2C",["^J",[["~$f","^33","~$dirty?","~$nocache?","~$watching","^34","~$auto-run","~$caught"]]]]],"^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/Reaction."],"^2P",["^E",["^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X","^3Z","^3[","^2Y","^2Z"]],"^M","~$reagent.ratom/->Reaction","^6","reagent/ratom.cljs","^:",18,"^2G",["^J",[["~$f","^33","^40","^41","^42","^34","^43","^44"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^2[","^30","^7",365,"^2K","~$reagent.ratom/Reaction","^9",365,"^2M",8,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f","^33","^40","^41","^42","^34","^43","^44"]]]]],"^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",601,"^8",7,"^9",601,"^:",19,"^I",["^J",["^2C",["^J",[["~$value","~$callback-fn","^3A"]]]]]],"^M","~$reagent.ratom/make-wrapper","^6","reagent/ratom.cljs","^:",19,"^2G",["^J",[["^48","^49","^3A"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",601,"^2K","~$reagent.ratom/Wrapper","^9",601,"^2M",3,"^2N",true,"^I",["^J",["^2C",["^J",[["^48","^49","^3A"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",135,"^8",14,"^9",135,"^:",27,"~:protocol-symbol",true,"~:jsdoc",["^J",["@interface"]],"~:protocol-info",["^ ","^3S",["^ "]]],"^4=",true,"^M","^2X","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",135,"^4?",["^ ","^3S",["^ "]],"~:info",null,"^9",135,"^3K","^2L","~:impls",["^E",["^37","^3C","^46","^3H"]],"^4>",["^J",["@interface"]]],"~$track",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",247,"^8",7,"^9",247,"^:",12,"^I",["^J",["^2C",["^J",[["~$f","~$&","^3A"]]]]],"^3P",["^ ","^2J",true,"^3Q",1,"^2M",1,"^2G",[["^J",["~$f","^3A"]]],"^I",["^J",[["~$f","~$&","^3A"]]],"^2I",["^J",[null]]]],"^M","~$reagent.ratom/track","^6","reagent/ratom.cljs","^:",12,"^3P",["^ ","^2J",true,"^3Q",1,"^2M",1,"^2G",[["^J",["~$f","^3A"]]],"^I",["^J",[["~$f","~$&","^3A"]]],"^2I",["^J",[null]]],"^2G",[["^J",["~$f","^3A"]]],"^2H",null,"^3Q",1,"^2I",["^J",[null]],"^8",1,"^2J",true,"^3S",[["^ ","^3Q",1,"^2J",true,"^3K","^3C"]],"^7",247,"^2K","^2L","^9",247,"^2M",1,"^2N",true,"^I",["^J",[["~$f","~$&","^3A"]]]],"~$dispose!",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",347,"^8",4,"^9",347,"^:",12,"~:protocol","^3[","^U",null,"^I",["^J",["^2C",["^J",[["^3U"]]]]]],"^4E","^3[","^M","~$reagent.ratom/dispose!","^6","reagent/ratom.cljs","^:",12,"^2G",["^J",[["^3U"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",346,"^2K","^2L","^9",347,"^2M",1,"^2N",true,"^I",["^J",["^2C",["^J",[["^3U"]]]]],"^U",null],"~$arr-eq",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",27,"^8",17,"^9",27,"^:",23,"^3K","~$boolean","^2B",true,"^I",["^J",["^2C",["^J",[["~$x","~$y"]]]]]],"^2B",true,"^M","~$reagent.ratom/arr-eq","^6","reagent/ratom.cljs","^:",23,"^2G",["^J",[["~$x","~$y"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",27,"^2K","^4H","^9",27,"^2M",2,"^3K","^4H","^2N",true,"^I",["^J",["^2C",["^J",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",353,"^8",8,"^9",353,"^:",30,"^2B",true,"^I",["^J",["^2C",["^J",[["^3U","~$sender","^3V","^3W"]]]]]],"^2B",true,"^M","~$reagent.ratom/handle-reaction-change","^6","reagent/ratom.cljs","^:",30,"^2G",["^J",[["^3U","^4K","^3V","^3W"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",353,"^2K","^2L","^9",353,"^2M",4,"^2N",true,"^I",["^J",["^2C",["^J",[["^3U","^4K","^3V","^3W"]]]]]],"~$run",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",351,"^8",4,"^9",351,"^:",7,"^4E","^3Z","^U",null,"^I",["^J",["^2C",["^J",[["^3U"]]]]]],"^4E","^3Z","^M","~$reagent.ratom/run","^6","reagent/ratom.cljs","^:",7,"^2G",["^J",[["^3U"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",350,"^2K","^2L","^9",351,"^2M",1,"^2N",true,"^I",["^J",["^2C",["^J",[["^3U"]]]]],"^U",null],"~$add-on-dispose!",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",348,"^8",4,"^9",348,"^:",19,"^4E","^3[","^U",null,"^I",["^J",["^2C",["^J",[["^3U","~$f"]]]]]],"^4E","^3[","^M","~$reagent.ratom/add-on-dispose!","^6","reagent/ratom.cljs","^:",19,"^2G",["^J",[["^3U","~$f"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",346,"^2K","^2L","^9",348,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["^3U","~$f"]]]]],"^U",null],"~$temp-reaction",["^ ","^M","~$reagent.ratom/temp-reaction","^6","reagent/ratom.cljs","^7",524,"^8",1,"^9",524,"^:",29,"^2B",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",524,"^8",16,"^9",524,"^:",29,"^2B",true],"^3K","^46"],"~$make-track!",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",240,"^8",7,"^9",240,"^:",18,"^I",["^J",["^2C",["^J",[["~$f","^3A"]]]]]],"^M","~$reagent.ratom/make-track!","^6","reagent/ratom.cljs","^:",18,"^2G",["^J",[["~$f","^3A"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",240,"^2K","^2L","^9",240,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f","^3A"]]]]]],"~$generation",["^ ","^M","~$reagent.ratom/generation","^6","reagent/ratom.cljs","^7",12,"^8",1,"^9",12,"^:",30,"^2B",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",30,"^2B",true],"^3K","~$number"],"~$run-in-reaction",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",527,"^8",7,"^9",527,"^:",22,"^I",["^J",["^2C",["^J",[["~$f","^[","~$key","^4M","^2E"]]]]],"^U","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^M","~$reagent.ratom/run-in-reaction","^6","reagent/ratom.cljs","^:",22,"^2G",["^J",[["~$f","^[","^4Y","^4M","^2E"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",527,"^2K","^2L","^9",527,"^2M",5,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f","^[","^4Y","^4M","^2E"]]]]],"^U","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",346,"^8",14,"^9",346,"^:",25,"^4=",true,"^4>",["^J",["@interface"]],"^4?",["^ ","^3S",["^ ","^4D",[["^3U"]],"^4O",[["^3U","~$f"]]]]],"^4=",true,"^M","^3[","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",346,"^4?",["^ ","^3S",["^ ","^4D",[["^3U"]],"^4O",[["^3U","~$f"]]]],"^4@",null,"^9",346,"^3K","^2L","^4A",["^E",["^46"]],"^4>",["^J",["@interface"]]],"~$check-watches",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",74,"^8",8,"^9",74,"^:",21,"^2B",true,"^I",["^J",["^2C",["^J",[["^3V","^3W"]]]]]],"^2B",true,"^M","~$reagent.ratom/check-watches","^6","reagent/ratom.cljs","^:",21,"^2G",["^J",[["^3V","^3W"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",74,"^9",74,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["^3V","^3W"]]]]]],"~$with-let-destroy",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",333,"^8",7,"^9",333,"^:",23,"^I",["^J",["^2C",["^J",[["~$v"]]]]]],"^M","~$reagent.ratom/with-let-destroy","^6","reagent/ratom.cljs","^:",23,"^2G",["^J",[["~$v"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",333,"^2K",["^E",["^2L","^3;"]],"^9",333,"^2M",1,"^2N",true,"^I",["^J",["^2C",["^J",[["~$v"]]]]]],"~$make-reaction",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",515,"^8",7,"^9",515,"^:",20,"^I",["^J",["^2C",["^J",[["~$f","~$&",["^ ","^3M",["^43","~$on-set","~$on-dispose"]]]]]]],"^3P",["^ ","^2J",true,"^3Q",1,"^2M",1,"^2G",[["^J",["~$f",["^ ","^3M",["^43","^55","^56"]]]]],"^I",["^J",[["~$f","~$&",["^ ","^3M",["^43","^55","^56"]]]]],"^2I",["^J",[null]]]],"^M","~$reagent.ratom/make-reaction","^6","reagent/ratom.cljs","^:",20,"^3P",["^ ","^2J",true,"^3Q",1,"^2M",1,"^2G",[["^J",["~$f",["^ ","^3M",["^43","^55","^56"]]]]],"^I",["^J",[["~$f","~$&",["^ ","^3M",["^43","^55","^56"]]]]],"^2I",["^J",[null]]],"^2G",[["^J",["~$f",["^ ","^3M",["^43","^55","^56"]]]]],"^2H",null,"^3Q",1,"^2I",["^J",[null]],"^8",1,"^2J",true,"^3S",[["^ ","^3Q",1,"^2J",true,"^3K","^46"]],"^7",515,"^2K","^2L","^9",515,"^2M",1,"^2N",true,"^I",["^J",[["~$f","~$&",["^ ","^3M",["^43","^55","^56"]]]]]],"~$add-w",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",79,"^8",8,"^9",79,"^:",13,"^2B",true,"^I",["^J",["^2C",["^J",[["^3U","^4Y","~$f"]]]]]],"^2B",true,"^M","~$reagent.ratom/add-w","^6","reagent/ratom.cljs","^:",13,"^2G",["^J",[["^3U","^4Y","~$f"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",79,"^9",79,"^2M",3,"^2N",true,"^I",["^J",["^2C",["^J",[["^3U","^4Y","~$f"]]]]]],"~$Reaction",["^ ","^3E",8,"^2P",["^E",["^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X","^3Z","^3[","^2Y","^2Z"]],"^M","^46","^6","reagent/ratom.cljs","^:",18,"^3I",true,"^8",10,"^7",365,"^3J",false,"^9",365,"^3K","^3L","^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2Y","^2Z"]]],"~$flush!",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",121,"^8",7,"^9",121,"^:",13,"^I",["^J",["^2C",["^J",[[]]]]]],"^M","~$reagent.ratom/flush!","^6","reagent/ratom.cljs","^:",13,"^2G",["^J",[[]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",121,"^2K","^3;","^9",121,"^2M",0,"^2N",true,"^I",["^J",["^2C",["^J",[[]]]]]],"~$RCursor",["^ ","^3E",5,"^2P",["^E",["^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X","^2Y","^2Z"]],"^M","^37","^6","reagent/ratom.cljs","^:",17,"^3I",true,"^8",10,"^7",257,"^3J",false,"^9",257,"^3K","^3L","^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2Y","^2Z"]]],"~$cached-reaction",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",192,"^8",8,"^9",192,"^:",23,"^2B",true,"^I",["^J",["^2C",["^J",[["~$f","~$o","~$k","^[","~$destroy"]]]]]],"^2B",true,"^M","~$reagent.ratom/cached-reaction","^6","reagent/ratom.cljs","^:",23,"^2G",["^J",[["~$f","~$o","~$k","^[","^5?"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",192,"^2K","^2L","^9",192,"^2M",5,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f","~$o","~$k","^[","^5?"]]]]]],"~$Track",["^ ","^3E",3,"^2P",["^E",["^2S","^2T","^2X","^2Y","^2Z"]],"^M","^3C","^6","reagent/ratom.cljs","^:",15,"^3I",true,"^8",10,"^7",216,"^3J",false,"^9",216,"^3K","^3L","^35",["^E",["^2S","^2T","^2Y","^2Z"]]],"~$debug",["^ ","^M","~$reagent.ratom/debug","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",24,"^3K","^4H","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",19,"^9",11,"^:",24,"^3K","^4H"]],"~$-running",["^ ","^M","~$reagent.ratom/-running","^6","reagent/ratom.cljs","^7",13,"^8",1,"^9",13,"^:",28,"^2B",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",20,"^9",13,"^:",28,"^2B",true],"^3K","~$cljs.core/Atom"],"~$cursor",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",319,"^8",7,"^9",319,"^:",13,"^I",["^J",["^2C",["^J",[["~$src","^32"]]]]]],"^M","~$reagent.ratom/cursor","^6","reagent/ratom.cljs","^:",13,"^2G",["^J",[["^5H","^32"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",319,"^2K","^37","^9",319,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["^5H","^32"]]]]]],"~$Wrapper",["^ ","^3E",4,"^2P",["^E",["^2Q","^2R","^2S","^2V","^2W","^2Y","^2Z"]],"^M","^4;","^6","reagent/ratom.cljs","^:",17,"^3I",true,"^8",10,"^7",554,"^3J",false,"^9",554,"^3K","^3L","^35",["^E",["^2Q","^2R","^2S","^2V","^2W","^2Y","^2Z"]]],"~$running",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",21,"^8",7,"^9",21,"^:",14,"^I",["^J",["^2C",["^J",[[]]]]]],"^M","~$reagent.ratom/running","^6","reagent/ratom.cljs","^:",14,"^2G",["^J",[[]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",21,"^2K","^2L","^9",21,"^2M",0,"^2N",true,"^I",["^J",["^2C",["^J",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",350,"^8",14,"^9",350,"^:",23,"^4=",true,"^4>",["^J",["@interface"]],"^4?",["^ ","^3S",["^ ","^4M",[["^3U"]]]]],"^4=",true,"^M","^3Z","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",350,"^4?",["^ ","^3S",["^ ","^4M",[["^3U"]]]],"^4@",null,"^9",350,"^3K","^2L","^4A",["^E",["^46"]],"^4>",["^J",["@interface"]]],"~$reactive?",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",16,"^9",15,"^:",25,"^3K","^4H","^I",["^J",["^2C",["^J",[[]]]]]],"^M","~$reagent.ratom/reactive?","^6","reagent/ratom.cljs","^:",25,"^2G",["^J",[[]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",15,"^2K","^4H","^9",15,"^2M",0,"^3K","^4H","^2N",true,"^I",["^J",["^2C",["^J",[[]]]]]],"~$deref-capture",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",44,"^8",8,"^9",44,"^:",21,"^2B",true,"^I",["^J",["^2C",["^J",[["~$f","~$r"]]]]],"^U","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^2B",true,"^M","~$reagent.ratom/deref-capture","^6","reagent/ratom.cljs","^:",21,"^2G",["^J",[["~$f","~$r"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",44,"^2K","^2L","^9",44,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f","~$r"]]]]],"^U","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^M","~$reagent.ratom/rea-queue","^6","reagent/ratom.cljs","^7",113,"^8",1,"^9",113,"^:",29,"^2B",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",113,"^8",20,"^9",113,"^:",29,"^2B",true],"^3K","^3;"],"~$with-let-values",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",337,"^8",7,"^9",337,"^:",22,"^I",["^J",["^2C",["^J",[["^4Y"]]]]]],"^M","~$reagent.ratom/with-let-values","^6","reagent/ratom.cljs","^:",22,"^2G",["^J",[["^4Y"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",337,"^2K",["^E",["^2L","~$array"]],"^9",337,"^2M",1,"^2N",true,"^I",["^J",["^2C",["^J",[["^4Y"]]]]]],"~$track!",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",251,"^8",7,"^9",251,"^:",13,"^I",["^J",["^2C",["^J",[["~$f","~$&","^3A"]]]]],"^3P",["^ ","^2J",true,"^3Q",1,"^2M",1,"^2G",[["^J",["~$f","^3A"]]],"^I",["^J",[["~$f","~$&","^3A"]]],"^2I",["^J",[null]]]],"^M","~$reagent.ratom/track!","^6","reagent/ratom.cljs","^:",13,"^3P",["^ ","^2J",true,"^3Q",1,"^2M",1,"^2G",[["^J",["~$f","^3A"]]],"^I",["^J",[["~$f","~$&","^3A"]]],"^2I",["^J",[null]]],"^2G",[["^J",["~$f","^3A"]]],"^2H",null,"^3Q",1,"^2I",["^J",[null]],"^8",1,"^2J",true,"^3S",[["^ ","^3Q",1,"^2J",true,"^3K","^2L"]],"^7",251,"^2K","^2L","^9",251,"^2M",1,"^2N",true,"^I",["^J",[["~$f","~$&","^3A"]]]],"~$*ratom-context*",["^ ","^M","~$reagent.ratom/*ratom-context*","^6","reagent/ratom.cljs","^7",10,"^8",1,"^9",10,"^:",35,"~:dynamic",true,"~:declared",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",20,"^9",10,"^:",35,"^5[",true,"^60",true]],"~$check-derefs",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",546,"^8",7,"^9",546,"^:",19,"^I",["^J",["^2C",["^J",[["~$f"]]]]]],"^M","~$reagent.ratom/check-derefs","^6","reagent/ratom.cljs","^:",19,"^2G",["^J",[["~$f"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",546,"^2K","~$cljs.core/IVector","^9",546,"^2M",1,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f"]]]]]],"~$remove-w",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",84,"^8",8,"^9",84,"^:",16,"^2B",true,"^I",["^J",["^2C",["^J",[["^3U","^4Y"]]]]]],"^2B",true,"^M","~$reagent.ratom/remove-w","^6","reagent/ratom.cljs","^:",16,"^2G",["^J",[["^3U","^4Y"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",84,"^9",84,"^2M",2,"^2N",true,"^I",["^J",["^2C",["^J",[["^3U","^4Y"]]]]]],"~$->Wrapper",["^ ","^2A",null,"^5",["^ ","^2P",["^E",["^2Q","^2R","^2S","^2V","^2W","^2Y","^2Z"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^2[","^30","^7",554,"^9",554,"^I",["^J",["^2C",["^J",[["^33","~$callback","~$changed","^34"]]]]],"^35",["^E",["^2Q","^2R","^2S","^2V","^2W","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/Wrapper."],"^2P",["^E",["^2Q","^2R","^2S","^2V","^2W","^2Y","^2Z"]],"^M","~$reagent.ratom/->Wrapper","^6","reagent/ratom.cljs","^:",17,"^2G",["^J",[["^33","^67","^68","^34"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^2[","^30","^7",554,"^2K","^4;","^9",554,"^2M",4,"^2N",true,"^I",["^J",["^2C",["^J",[["^33","^67","^68","^34"]]]]],"^35",["^E",["^2Q","^2R","^2S","^2V","^2W","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^2A",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",24,"^8",16,"^9",24,"^:",23,"^3K","^4W","^2B",true,"^I",["^J",["^2C",["^J",[["~$x"]]]]]],"^2B",true,"^M","~$reagent.ratom/arr-len","^6","reagent/ratom.cljs","^:",23,"^2G",["^J",[["~$x"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^7",24,"^2K","^4W","^9",24,"^2M",1,"^3K","^4W","^2N",true,"^I",["^J",["^2C",["^J",[["~$x"]]]]]],"~$->RAtom",["^ ","^2A",null,"^5",["^ ","^2P",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2X","^3F","^2Y","^2Z","^3G"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^2[","^30","^7",137,"^9",137,"^I",["^J",["^2C",["^J",[["^33","^3N","^3O","^34"]]]]],"^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^3F","^2Y","^2Z","^3G"]],"^U","Positional factory function for reagent.ratom/RAtom."],"^2P",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^2X","^3F","^2Y","^2Z","^3G"]],"^M","~$reagent.ratom/->RAtom","^6","reagent/ratom.cljs","^:",15,"^2G",["^J",[["^33","^3N","^3O","^34"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^2[","^30","^7",137,"^2K","^3H","^9",137,"^2M",4,"^2N",true,"^I",["^J",["^2C",["^J",[["^33","^3N","^3O","^34"]]]]],"^35",["^E",["^2Q","^2R","^2S","^2T","^2V","^2W","^3F","^2Y","^2Z","^3G"]],"^U","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^2A",null,"^5",["^ ","^2P",["^E",["^2S","^2T","^2X","^2Y","^2Z"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^2[","^30","^7",216,"^9",216,"^I",["^J",["^2C",["^J",[["~$f","^3A","^R"]]]]],"^35",["^E",["^2S","^2T","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/Track."],"^2P",["^E",["^2S","^2T","^2X","^2Y","^2Z"]],"^M","~$reagent.ratom/->Track","^6","reagent/ratom.cljs","^:",15,"^2G",["^J",[["~$f","^3A","^R"]]],"^2H",null,"^2I",["^J",[null,null]],"^8",1,"^2J",false,"^2[","^30","^7",216,"^2K","^3C","^9",216,"^2M",3,"^2N",true,"^I",["^J",["^2C",["^J",[["~$f","^3A","^R"]]]]],"^35",["^E",["^2S","^2T","^2Y","^2Z"]],"^U","Positional factory function for reagent.ratom/Track."]],"^19",["^ ","^P","^P","^B","^B","^11","^11"],"~:cljs.analyzer/constants",["^ ","^17",["^E",["~:on-set","^44","^42","^4H","^R","^67","^5","~:else","^32","^3A","~:validator","^34","^3N","^3O","^40","~:no-cache","^31","^33","~:auto-run","~:on-dispose","^3K","~:mutable","^68","^43","^41","~$f"]],"~:order",["^33","^6G","^3N","^3O","^34","^5","^6C","^6B","^6F","~$f","^3A","^R","^6E","^31","^32","^6A","^6D","^40","^3K","^4H","^41","^42","^43","^44","^67","^68"]],"^1A",["^ ","^19",["^E",[]],"^18",["^E",[]]],"^1B",["^ "],"^1C",["^12","^11","^Z","^B","^13","^14","^10"]],"^O","^P","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1Q",[["^6K","~:static-fns"],true,["^6K","~:elide-asserts"],false,["^6K","~:optimize-constants"],null,["^6K","^1H"],null,["^6K","~:external-config"],null,["^6K","~:tooling-config"],null,["^6K","~:emit-constants"],null,["^6K","~:load-tests"],null,["^6K","~:infer-externs"],true,["^6K","^1J"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6K","~:fn-invoke-direct"],null,["^6K","~:source-map"],"/dev/null"]]]