["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.comment');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node.protocols');\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.comment.CommentNode = (function (s,__meta,__extmap,__hash){\nthis.s = s;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(rewrite_clj.node.comment.CommentNode.prototype.toString = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.rewrite_clj$node$protocols$Node$string$arity$1(null);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4439__auto__,k__4440__auto__){\nvar self__ = this;\nvar this__4439__auto____$1 = this;\nreturn this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4440__auto__,null);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4441__auto__,k35211,else__4442__auto__){\nvar self__ = this;\nvar this__4441__auto____$1 = this;\nvar G__35215 = k35211;\nvar G__35215__$1 = (((G__35215 instanceof cljs.core.Keyword))?G__35215.fqn:null);\nswitch (G__35215__$1) {\ncase \"s\":\nreturn self__.s;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k35211,else__4442__auto__);\n\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4458__auto__,f__4459__auto__,init__4460__auto__){\nvar self__ = this;\nvar this__4458__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4461__auto__,p__35217){\nvar vec__35218 = p__35217;\nvar k__4462__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35218,(0),null);\nvar v__4463__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35218,(1),null);\nreturn (f__4459__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4459__auto__.cljs$core$IFn$_invoke$arity$3(ret__4461__auto__,k__4462__auto__,v__4463__auto__) : f__4459__auto__.call(null,ret__4461__auto__,k__4462__auto__,v__4463__auto__));\n}),init__4460__auto__,this__4458__auto____$1);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4453__auto__,writer__4454__auto__,opts__4455__auto__){\nvar self__ = this;\nvar this__4453__auto____$1 = this;\nvar pr_pair__4456__auto__ = (function (keyval__4457__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4455__auto__,keyval__4457__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,pr_pair__4456__auto__,\"#rewrite-clj.node.comment.CommentNode{\",\", \",\"}\",opts__4455__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"s\",\"s\",1705939918),self__.s],null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__35210){\nvar self__ = this;\nvar G__35210__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__35210__$1,1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4437__auto__){\nvar self__ = this;\nvar this__4437__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4434__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn (new rewrite_clj.node.comment.CommentNode(self__.s,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4443__auto__){\nvar self__ = this;\nvar this__4443__auto____$1 = this;\nreturn (1 + cljs.core.count(self__.__extmap));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4435__auto__){\nvar self__ = this;\nvar this__4435__auto____$1 = this;\nvar h__4297__auto__ = self__.__hash;\nif((!((h__4297__auto__ == null)))){\nreturn h__4297__auto__;\n} else {\nvar h__4297__auto____$1 = (function (coll__4436__auto__){\nreturn (495469178 ^ cljs.core.hash_unordered_coll(coll__4436__auto__));\n})(this__4435__auto____$1);\n(self__.__hash = h__4297__auto____$1);\n\nreturn h__4297__auto____$1;\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this35212,other35213){\nvar self__ = this;\nvar this35212__$1 = this;\nreturn (((!((other35213 == null)))) && ((this35212__$1.constructor === other35213.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this35212__$1.s,other35213.s)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this35212__$1.__extmap,other35213.__extmap)));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn new cljs.core.Keyword(null,\"comment\",\"comment\",532206069);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn true;\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nthrow (new Error(\"Unsupported operation\"));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn ((1) + cljs.core.count(self__.s));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn [\";\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.s)].join('');\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4448__auto__,k__4449__auto__){\nvar self__ = this;\nvar this__4448__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918),null], null), null),k__4449__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4448__auto____$1),self__.__meta),k__4449__auto__);\n} else {\nreturn (new rewrite_clj.node.comment.CommentNode(self__.s,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4449__auto__)),null));\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4446__auto__,k__4447__auto__,G__35210){\nvar self__ = this;\nvar this__4446__auto____$1 = this;\nvar pred__35226 = cljs.core.keyword_identical_QMARK_;\nvar expr__35227 = k__4447__auto__;\nif(cljs.core.truth_((pred__35226.cljs$core$IFn$_invoke$arity$2 ? pred__35226.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"s\",\"s\",1705939918),expr__35227) : pred__35226.call(null,new cljs.core.Keyword(null,\"s\",\"s\",1705939918),expr__35227)))){\nreturn (new rewrite_clj.node.comment.CommentNode(G__35210,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.comment.CommentNode(self__.s,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4447__auto__,G__35210),null));\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4451__auto__){\nvar self__ = this;\nvar this__4451__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"s\",\"s\",1705939918),self__.s,null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4438__auto__,G__35210){\nvar self__ = this;\nvar this__4438__auto____$1 = this;\nreturn (new rewrite_clj.node.comment.CommentNode(self__.s,G__35210,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4444__auto__,entry__4445__auto__){\nvar self__ = this;\nvar this__4444__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4445__auto__)){\nreturn this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4445__auto__,(0)),cljs.core._nth(entry__4445__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4444__auto____$1,entry__4445__auto__);\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null)], null);\n}));\n\n(rewrite_clj.node.comment.CommentNode.cljs$lang$type = true);\n\n(rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrSeq = (function (this__4482__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.comment/CommentNode\",null,(1),null));\n}));\n\n(rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrWriter = (function (this__4482__auto__,writer__4483__auto__){\nreturn cljs.core._write(writer__4483__auto__,\"rewrite-clj.node.comment/CommentNode\");\n}));\n\n/**\n * Positional factory function for rewrite-clj.node.comment/CommentNode.\n */\nrewrite_clj.node.comment.__GT_CommentNode = (function rewrite_clj$node$comment$__GT_CommentNode(s){\nreturn (new rewrite_clj.node.comment.CommentNode(s,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.comment.map__GT_CommentNode = (function rewrite_clj$node$comment$map__GT_CommentNode(G__35214){\nvar extmap__4478__auto__ = (function (){var G__35230 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(G__35214,new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\nif(cljs.core.record_QMARK_(G__35214)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__35230);\n} else {\nreturn G__35230;\n}\n})();\nreturn (new rewrite_clj.node.comment.CommentNode(new cljs.core.Keyword(null,\"s\",\"s\",1705939918).cljs$core$IFn$_invoke$arity$1(G__35214),null,cljs.core.not_empty(extmap__4478__auto__),null));\n});\n\n/**\n * Create node representing an EDN comment.\n */\nrewrite_clj.node.comment.comment_node = (function rewrite_clj$node$comment$comment_node(s){\nreturn rewrite_clj.node.comment.__GT_CommentNode(s);\n});\n/**\n * Check whether a node represents a comment.\n */\nrewrite_clj.node.comment.comment_QMARK_ = (function rewrite_clj$node$comment$comment_QMARK_(node){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rewrite_clj.node.protocols.tag(node),new cljs.core.Keyword(null,\"comment\",\"comment\",532206069));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/comment.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",29],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.comment","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.protocols","^K","~$node","^K","~$cljs.core","^M","~$goog","^N"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^F",["^T",["^P",["^K","~:as","^L"]]]]],"~:flags",["^ ","^P",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^N","^M","^K"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/comment.cljs"],"~:compiled-at",1611071561007,"~:resource-name","rewrite_clj/node/comment.cljs","~:warnings",[],"~:source","(ns rewrite-clj.node.comment\n  (:require [rewrite-clj.node.protocols :as node]))\n\n;; ## Node\n\n(defrecord CommentNode [s]\n  node/Node\n  (tag [_] :comment)\n  (printable-only? [_] true)\n  (sexpr [_]\n    (throw (js/Error. \"Unsupported operation\")))\n  (length [_]\n    (+ 1 (count s)))\n  (string [_]\n    (str \";\" s))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;;(node/make-printable! CommentNode)\n\n;; ## Constructor\n\n(defn comment-node\n  \"Create node representing an EDN comment.\"\n  [s]\n  (->CommentNode s))\n\n(defn comment?\n  \"Check whether a node represents a comment.\"\n  [node]\n  (= (node/tag node) :comment))\n\n\n\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["this__4439__auto__","k__4440__auto__","this__4441__auto__","k35211","else__4442__auto__","G__35215","cljs.core/Keyword","s","cljs.core.get","__extmap","this__4458__auto__","f__4459__auto__","init__4460__auto__","cljs.core.reduce","ret__4461__auto__","p__35217","vec__35218","k__4462__auto__","cljs.core.nth","v__4463__auto__","this__4453__auto__","writer__4454__auto__","opts__4455__auto__","pr-pair__4456__auto__","keyval__4457__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__35210","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4437__auto__","__meta","this__4434__auto__","__hash","this__4443__auto__","cljs.core/count","this__4435__auto__","h__4297__auto__","coll__4436__auto__","cljs.core/hash-unordered-coll","this35212","other35213","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__4448__auto__","k__4449__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4446__auto__","k__4447__auto__","pred__35226","cljs.core/keyword-identical?","expr__35227","cljs.core.assoc","this__4451__auto__","cljs.core/seq","cljs.core/MapEntry","this__4438__auto__","this__4444__auto__","entry__4445__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-clj.node.comment/CommentNode","this__4482__auto__","cljs.core/List","writer__4483__auto__","cljs.core/-write","G__35214","extmap__4478__auto__","G__35230","cljs.core/record?","rewrite-clj.node.comment/->CommentNode","rewrite-clj.node.comment/map->CommentNode","_","js/Error","this","rewrite-clj.node.comment/comment-node","rewrite-clj.node.comment/comment?","node","rewrite-clj.node.protocols/tag"]],"~:used-vars",["^D",["~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/-assoc","~$rewrite-clj.node.protocols/tag","~$cljs.core/-write","~$cljs.core/-iterator","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/-with-meta","~$cljs.core/concat","~$cljs.core/contains?","~$rewrite-clj.node.comment/->CommentNode","~$cljs.core/into","~$cljs.core/-conj","~$cljs.core/PersistentVector","~$cljs.core/List","~$cljs.core/get","~$cljs.core/-nth","~$cljs.core/not-empty","~$cljs.core/-lookup","~$cljs.core/nil-iter","~$cljs.core/RecordIter","~$rewrite-clj.node.protocols/string","~$cljs.core/not","~$cljs.core/assoc","~$rewrite-clj.node.comment/comment-node","~$rewrite-clj.node.comment/CommentNode","~$js/Error","~$rewrite-clj.node.comment/comment?","~$rewrite-clj.node.comment/map->CommentNode"]]],"~:cache-keys",["~#cmap",[["^[","goog/dom/tagname.js"],[1611071510313,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^N","~$goog.dom.HtmlElement"]]],["^[","goog/math/math.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","~$goog.array","~$goog.asserts"]]],["^[","goog/html/trustedtypes.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/labs/useragent/browser.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^[","goog/html/safeurl.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2="]]],["^[","goog/array/array.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:"]]],["^[","goog/debug/error.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/dom/nodetype.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/string/typedstring.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/object/object.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/dom/asserts.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:"]]],"~:SHADOW-TIMESTAMP",[1611071515000,1611071515000,1611071513000],["^[","goog/math/long.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:","~$goog.reflect"]]],["^[","goog/html/trustedresourceurl.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:","~$goog.html.trustedtypes","^2@","^2A","^2B","^2C"]]],["^[","goog/string/internal.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/functions/functions.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/html/safestyle.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","^2:","~$goog.html.SafeUrl","^2B","^2C","^2="]]],["^[","goog/dom/safe.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2G","^2?","~$goog.html.uncheckedconversions","^2B","^2="]]],["^[","goog/structs/map.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^[","goog/html/safehtml.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","^2:","~$goog.dom.TagName","~$goog.dom.tags","^2K","^2L","~$goog.html.SafeStyleSheet","^2G","^2?","^2F","^2@","^2A","~$goog.labs.userAgent.browser","^2<","^2B","^2C","^2="]]],["^[","goog/dom/tags.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2<"]]],["^[","rewrite_clj/node/comment.cljs"],[1611071514323,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^M","^K"]]],["^[","goog/asserts/asserts.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^[","goog/uri/uri.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","^2:","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^[","goog/i18n/bidi.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","rewrite_clj/node/protocols.cljs"],[1611071514323,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^M","~$clojure.string"]]],["^[","goog/fs/url.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/base.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",[]]],["^[","goog/structs/structs.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","^2<"]]],["^[","clojure/string.cljs"],[1611071513180,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^M","^2V","~$goog.string.StringBuffer"]]],["^[","goog/string/string.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","~$goog.dom.safe","^2M","^2B","^2="]]],["^[","goog/reflect/reflect.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/labs/useragent/util.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2="]]],["^[","goog/string/stringbuffer.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","goog/iter/iter.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","^2:","^2I","~$goog.math"]]],["^[","goog/html/uncheckedconversions.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:","^2J","^2K","^2L","^2R","^2G","^2?","^2B","^2="]]],["^[","goog/dom/htmlelement.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N"]]],["^[","cljs/core.cljs"],[1611071513180,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","~$goog.math.Long","~$goog.math.Integer","^2V","^2<","^29","~$goog.Uri","^31"]]],["^[","goog/html/safescript.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:","^2F","^2B","^2C"]]],["^[","goog/html/safestylesheet.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","^2:","^2L","^2<","^2B","^2C","^2="]]],["^[","goog/math/integer.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2E"]]],["^[","goog/uri/utils.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^29","^2:","^2V"]]],["^[","goog/string/const.js"],[1611071510313,"^24",["^ ","^25",null,"^26",["^D",[]],"^27",["^N","^2:","^2C"]]]]],"~:clj-info",["^ ","jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611071506000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1611071507000,"jar:file:/home/mark/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1611071513000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/comment.cljs","^7",1,"^8",5,"^9",1,"^:",29],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^K","^M","^M","^N","^N"],"^O",["^D",["^P"]],"~:shadow/js-access-global",["^D",["Error"]],"^Q",null,"~:defs",["^ ","~$CommentNode",["^ ","~:num-fields",1,"~:protocols",["^D",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^E","^1Z","^6","rewrite_clj/node/comment.cljs","^:",23,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",6,"~:record",true,"^9",6,"~:tag","~$function","~:skip-protocol-flag",["^D",["^3W","^3X","^3Y","^3Z","^3[","^41","^42","^43","^44","^45","^46","^48","^49","^4:","^4;"]]],"~$->CommentNode",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljs","^:",23,"^8",12,"^4=",true,"~:factory","~:positional","^7",6,"^9",6,"~:arglists",["^T",["~$quote",["^T",[["~$s"]]]]],"~:doc","Positional factory function for rewrite-clj.node.comment/CommentNode."],"^E","^1K","^6","rewrite_clj/node/comment.cljs","^:",23,"~:method-params",["^T",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^8",1,"^4=",true,"~:variadic?",false,"^4D","^4E","^7",6,"~:ret-tag","^1Z","^9",6,"~:max-fixed-arity",1,"~:fn-var",true,"^4F",["^T",["^4G",["^T",[["~$s"]]]]],"^4H","Positional factory function for rewrite-clj.node.comment/CommentNode."],"~$map->CommentNode",["^ ","^4C",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljs","^:",23,"^8",12,"^4=",true,"^4D","~:map","^7",6,"^9",6,"^4F",["^T",["^4G",["^T",[["~$G__35214"]]]]],"^4H","Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values."],"^E","^21","^6","rewrite_clj/node/comment.cljs","^:",23,"^4I",["^T",[["^4R"]]],"^4J",null,"^4K",["^T",[null,null]],"^8",1,"^4=",true,"^4L",false,"^4D","^4Q","^7",6,"^4M","^1Z","^9",6,"^4N",1,"^4O",true,"^4F",["^T",["^4G",["^T",[["^4R"]]]]],"^4H","Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values."],"~$comment-node",["^ ","^4C",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljs","^7",25,"^8",7,"^9",25,"^:",19,"^4F",["^T",["^4G",["^T",[["~$s"]]]]],"^4H","Create node representing an EDN comment."],"^E","^1Y","^6","rewrite_clj/node/comment.cljs","^:",19,"^4I",["^T",[["~$s"]]],"^4J",null,"^4K",["^T",[null,null]],"^8",1,"^4L",false,"^7",25,"^4M","^1Z","^9",25,"^4N",1,"^4O",true,"^4F",["^T",["^4G",["^T",[["~$s"]]]]],"^4H","Create node representing an EDN comment."],"~$comment?",["^ ","^4C",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljs","^7",30,"^8",7,"^9",30,"^:",15,"^4F",["^T",["^4G",["^T",[["^L"]]]]],"^4H","Check whether a node represents a comment."],"^E","^20","^6","rewrite_clj/node/comment.cljs","^:",15,"^4I",["^T",[["^L"]]],"^4J",null,"^4K",["^T",[null,null]],"^8",1,"^4L",false,"^7",30,"^4M","~$boolean","^9",30,"^4N",1,"^4O",true,"^4F",["^T",["^4G",["^T",[["^L"]]]]],"^4H","Check whether a node represents a comment."]],"^R",["^ ","^M","^M"],"~:cljs.analyzer/constants",["^ ","^O",["^D",["~:s","~:comment","~$s"]],"~:order",["~:s","^4W","~$s"]],"^W",["^ ","^P",["^D",[]]],"^X",["^ "],"^Y",["^N","^M","^K"]],"^H","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^23",[["^4[","~:static-fns"],true,["^4[","~:shadow-tweaks"],null,["^4[","~:source-map-inline"],null,["^4[","~:elide-asserts"],false,["^4[","~:optimize-constants"],null,["^4[","^12"],null,["^4[","~:external-config"],null,["^4[","~:tooling-config"],null,["^4[","~:emit-constants"],null,["^4[","~:load-tests"],null,["^4[","~:form-size-threshold"],null,["^4[","~:infer-externs"],true,["^4[","^14"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4[","~:fn-invoke-direct"],null,["^4[","~:source-map"],"/dev/null"]]]