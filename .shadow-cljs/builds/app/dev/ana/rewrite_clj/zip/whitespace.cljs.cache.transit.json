["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('clojure.zip');\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\nvar G__36091 = zloc;\nvar G__36091__$1 = (((G__36091 == null))?null:clojure.zip.node(G__36091));\nif((G__36091__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1(G__36091__$1) : rewrite_clj.node.whitespace_QMARK_.call(null,G__36091__$1));\n}\n});\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\nvar G__36092 = zloc;\nvar G__36092__$1 = (((G__36092 == null))?null:clojure.zip.node(G__36092));\nif((G__36092__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1(G__36092__$1) : rewrite_clj.node.linebreak_QMARK_.call(null,G__36092__$1));\n}\n});\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\nvar G__36093 = zloc;\nvar G__36093__$1 = (((G__36093 == null))?null:clojure.zip.node(G__36093));\nif((G__36093__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1(G__36093__$1) : rewrite_clj.node.comment_QMARK_.call(null,G__36093__$1));\n}\n});\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\nvar and__4174__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\n} else {\nreturn and__4174__auto__;\n}\n});\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\nvar G__36098 = zloc;\nvar G__36098__$1 = (((G__36098 == null))?null:clojure.zip.node(G__36098));\nif((G__36098__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace_or_comment_QMARK_(G__36098__$1);\n}\n});\n/**\n * Perform the given movement while the given predicate returns true.\n */\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(clojure.zip.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\n});\n/**\n * Perform the given movement (default: `z/right`) until a non-whitespace/\n * non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\nvar G__36101 = arguments.length;\nswitch (G__36101) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.right,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2);\n\n/**\n * Move left until a non-whitespace/non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.left,zloc);\n});\n/**\n * Prepend a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\nvar G__36115 = arguments.length;\nswitch (G__36115) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\nvar G__36122 = arguments.length;\nswitch (G__36122) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Prepend a newlines node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\nvar G__36130 = arguments.length;\nswitch (G__36130) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a newline node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\nvar G__36140 = arguments.length;\nswitch (G__36140) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^K","~$node","^K","~$clojure.zip","^M","~$z","^M","~$cljs.core","^N","~$goog","^O"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^N","^N"],"~:form",["~#list",["~$ns","^F",["^U",["^Q",["^K","~:as","^L"],["^M","^W","~$z"]]]]],"~:flags",["^ ","^Q",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^K","^M"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljs"],"~:compiled-at",1611071561608,"~:resource-name","rewrite_clj/zip/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n;; ## Predicates\n\n(defn whitespace?\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Perform the given movement while the given predicate returns true.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Move left until a non-whitespace/non-comment node is encountered.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn prepend-space\n  \"Prepend a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (prepend-space zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/spaces n))))\n\n(defn append-space\n  \"Append a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (append-space zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/spaces n))))\n\n(defn prepend-newline\n  \"Prepend a newlines node representing the given number of newlines (default: 1).\"\n  ([zloc] (prepend-newline zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn append-newline\n  \"Append a newline node representing the given number of newlines (default: 1).\"\n  ([zloc] (append-newline zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.zip.whitespace/whitespace?","zloc","G__36091","clojure.zip/node","rewrite-clj.node/whitespace?","rewrite-clj.zip.whitespace/linebreak?","G__36092","rewrite-clj.node/linebreak?","rewrite-clj.zip.whitespace/comment?","G__36093","rewrite-clj.node/comment?","rewrite-clj.zip.whitespace/whitespace-not-linebreak?","and__4174__auto__","cljs.core/not","rewrite-clj.zip.whitespace/whitespace-or-comment?","G__36098","rewrite-clj.node/whitespace-or-comment?","rewrite-clj.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","clojure.zip/end?","cljs.core.drop_while","cljs.core/first","var_args","G__36101","rewrite-clj.zip.whitespace/skip-whitespace","js/Error","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/right","rewrite-clj.zip.whitespace/skip-whitespace-left","clojure.zip/left","G__36115","rewrite-clj.zip.whitespace/prepend-space","rewrite_clj.zip.whitespace.prepend_space","n","clojure.zip/insert-left","rewrite-clj.node/spaces","G__36122","rewrite-clj.zip.whitespace/append-space","rewrite_clj.zip.whitespace.append_space","clojure.zip/insert-right","G__36130","rewrite-clj.zip.whitespace/prepend-newline","rewrite_clj.zip.whitespace.prepend_newline","rewrite-clj.node/newlines","G__36140","rewrite-clj.zip.whitespace/append-newline","rewrite_clj.zip.whitespace.append_newline"]],"~:used-vars",["^D",["~$rewrite-clj.zip.whitespace/prepend-space","~$rewrite-clj.zip.whitespace/comment?","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","~$rewrite-clj.zip.whitespace/append-newline","~$clojure.zip/end?","~$rewrite-clj.zip.whitespace/prepend-newline","~$cljs.core/take-while","~$cljs.core/drop-while","~$rewrite-clj.zip.whitespace/append-space","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","~$cljs.core/identity","~$rewrite-clj.node/comment?","~$cljs.core/iterate","~$rewrite-clj.zip.whitespace/whitespace?","~$rewrite-clj.node/spaces","~$rewrite-clj.zip.whitespace/skip-whitespace-left","~$clojure.zip/insert-right","~$rewrite-clj.zip.whitespace/skip","~$rewrite-clj.node/whitespace-or-comment?","~$rewrite-clj.node/whitespace?","~$clojure.zip/insert-left","~$rewrite-clj.node/linebreak?","~$clojure.zip/right","~$cljs.core/not","~$cljs.core/complement","~$rewrite-clj.node/newlines","~$rewrite-clj.zip.whitespace/linebreak?","~$cljs.core/first","~$js/Error","~$clojure.zip/left","~$rewrite-clj.zip.whitespace/skip-whitespace"]]],"~:cache-keys",["~#cmap",[["^10","goog/dom/tagname.js"],[1611071510313,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^O","~$goog.dom.HtmlElement"]]],["^10","rewrite_clj/node/token.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","~$rewrite-clj.node.protocols"]]],["^10","cljs/tools/reader/impl/utils.cljs"],[1611071507100,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","~$clojure.string","~$goog.string"]]],["^10","goog/math/math.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","~$goog.array","~$goog.asserts"]]],["^10","goog/html/trustedtypes.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","goog/labs/useragent/browser.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^10","goog/html/safeurl.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2="]]],["^10","goog/array/array.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:"]]],["^10","goog/debug/error.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","goog/dom/nodetype.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","cljs/tools/reader/impl/inspect.cljs"],[1611071507100,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N"]]],["^10","cljs/tools/reader.cljs"],[1611071507100,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^29","^28","~$goog.string.StringBuffer"]]],["^10","rewrite_clj/node/forms.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26"]]],["^10","goog/string/typedstring.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","goog/object/object.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","goog/dom/asserts.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:"]]],"~:SHADOW-TIMESTAMP",[1611071515000,1611071515000,1611071513000],["^10","goog/math/long.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:","~$goog.reflect"]]],["^10","rewrite_clj/node/reader_macro.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26","~$rewrite-clj.node.whitespace"]]],["^10","goog/html/trustedresourceurl.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:","~$goog.html.trustedtypes","^2@","^2A","^2B","^2C"]]],["^10","goog/string/internal.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","goog/functions/functions.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","goog/html/safestyle.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","^2:","~$goog.html.SafeUrl","^2B","^2C","^2="]]],["^10","goog/dom/safe.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2M","^2?","~$goog.html.uncheckedconversions","^2B","^2="]]],["^10","clojure/walk.cljs"],[1611071513180,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N"]]],["^10","goog/structs/map.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^10","rewrite_clj/node/meta.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26","^2K"]]],["^10","goog/html/safehtml.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","^2:","~$goog.dom.TagName","~$goog.dom.tags","^2Q","^2R","~$goog.html.SafeStyleSheet","^2M","^2?","^2L","^2@","^2A","~$goog.labs.userAgent.browser","^2<","^2B","^2C","^2="]]],["^10","goog/dom/tags.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2<"]]],["^10","rewrite_clj/node/stringz.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26","~$cljs.tools.reader","^27"]]],["^10","rewrite_clj/node/comment.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26"]]],["^10","rewrite_clj/node/keyword.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26"]]],["^10","goog/asserts/asserts.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^10","goog/uri/uri.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","^2:","^28","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^10","goog/i18n/bidi.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","rewrite_clj/node/protocols.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^27"]]],["^10","rewrite_clj/node/seq.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26"]]],["^10","rewrite_clj/node/uneval.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26"]]],["^10","goog/fs/url.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","goog/base.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",[]]],["^10","goog/structs/structs.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","^2<"]]],["^10","cljs/tools/reader/impl/errors.cljs"],[1611071507100,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^2D","^27","~$cljs.tools.reader.impl.inspect"]]],["^10","rewrite_clj/node/whitespace.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26"]]],["^10","rewrite_clj/node/coercer.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^26","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2K"]]],["^10","clojure/string.cljs"],[1611071513180,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^28","^2H"]]],["^10","goog/string/string.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","~$goog.dom.safe","^2S","^2B","^2="]]],["^10","goog/reflect/reflect.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","rewrite_clj/node/fn.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26","~$clojure.walk"]]],["^10","goog/labs/useragent/util.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2="]]],["^10","rewrite_clj/node.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","~$rewrite-clj.node.coercer","^26","^39","^3@","^2K","^3A","^37","^38","^3=","^3;","^3?","^3:","^3<","^3>"]]],["^10","clojure/zip.cljs"],[1611071513180,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N"]]],["^10","goog/string/stringbuffer.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","cljs/tools/reader/reader_types.cljs"],[1611071507100,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^2E","^28","^2H"]]],["^10","goog/iter/iter.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","^2:","^2O","~$goog.math"]]],["^10","goog/html/uncheckedconversions.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:","^2P","^2Q","^2R","^2X","^2M","^2?","^2B","^2="]]],["^10","rewrite_clj/node/quote.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^26"]]],["^10","cljs/tools/reader/impl/commons.cljs"],[1611071507100,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^2G","^2D","^2E"]]],["^10","goog/dom/htmlelement.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O"]]],["^10","cljs/core.cljs"],[1611071513180,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","~$goog.math.Long","~$goog.math.Integer","^28","^2<","^29","~$goog.Uri","^2H"]]],["^10","goog/html/safescript.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:","^2L","^2B","^2C"]]],["^10","goog/html/safestylesheet.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","^2:","^2R","^2<","^2B","^2C","^2="]]],["^10","goog/math/integer.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2J"]]],["^10","goog/uri/utils.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^29","^2:","^28"]]],["^10","goog/string/const.js"],[1611071510313,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^2:","^2C"]]],["^10","rewrite_clj/zip/whitespace.cljs"],[1611071514323,"^21",["^ ","^22",null,"^23",["^D",[]],"^24",["^O","^N","^K","^M"]]]]],"~:clj-info",["^ ","jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611071506000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1611071507000,"jar:file:/home/mark/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1611071513000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^K","^M","^M","~$z","^M","^N","^N","^O","^O"],"^P",["^D",["^Q"]],"~:shadow/js-access-global",["^D",["Error"]],"^R",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",7,"^8",7,"^9",7,"^:",18,"~:arglists",["^U",["~$quote",["^U",[["~$zloc"]]]]]],"^E","^1I","^6","rewrite_clj/zip/whitespace.cljs","^:",18,"~:method-params",["^U",[["^4?"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag",["^D",["~$any","~$clj-nil"]],"^9",7,"~:max-fixed-arity",1,"~:fn-var",true,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"~$linebreak?",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",11,"^8",7,"^9",11,"^:",17,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"^E","^1V","^6","rewrite_clj/zip/whitespace.cljs","^:",17,"^4@",["^U",[["^4?"]]],"^4A",null,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^7",11,"^4D",["^D",["^4E","^4F"]],"^9",11,"^4G",1,"^4H",true,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"~$skip",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",32,"^8",7,"^9",32,"^:",11,"^4=",["^U",["^4>",["^U",[["~$f","~$p?","^4?"]]]]],"~:doc","Perform the given movement while the given predicate returns true."],"^E","^1M","^6","rewrite_clj/zip/whitespace.cljs","^:",11,"^4@",["^U",[["~$f","^4K","^4?"]]],"^4A",null,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^7",32,"^4D",["^D",["^4E","^4F"]],"^9",32,"^4G",3,"^4H",true,"^4=",["^U",["^4>",["^U",[["~$f","^4K","^4?"]]]]],"^4L","Perform the given movement while the given predicate returns true."],"~$prepend-space",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",54,"^8",7,"^9",54,"^:",20,"^4=",["^U",["^4>",["^U",[["^4?"],["^4?","~$n"]]]]],"^4L","Prepend a whitespace node representing the given number of spaces (default: 1).","~:top-fn",["^ ","^4C",false,"~:fixed-arity",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]]],"^E","^1<","^6","rewrite_clj/zip/whitespace.cljs","^:",20,"^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]],"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4A",null,"^4O",2,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"~:methods",[["^ ","^4O",1,"^4C",false,"~:tag","^4E"],["^ ","^4O",2,"^4C",false,"^4Q",["^D",["~$clj","~$cljs.core/MetaFn","^4F"]]]],"^7",54,"^9",54,"^4G",2,"^4H",true,"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4L","Prepend a whitespace node representing the given number of spaces (default: 1)."],"~$append-newline",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^4=",["^U",["^4>",["^U",[["^4?"],["^4?","~$n"]]]]],"^4L","Append a newline node representing the given number of newlines (default: 1).","^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]]],"^E","^1?","^6","rewrite_clj/zip/whitespace.cljs","^:",21,"^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]],"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4A",null,"^4O",2,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^4P",[["^ ","^4O",1,"^4C",false,"^4Q","^4E"],["^ ","^4O",2,"^4C",false,"^4Q",["^D",["^4R","^4S","^4F"]]]],"^7",72,"^9",72,"^4G",2,"^4H",true,"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4L","Append a newline node representing the given number of newlines (default: 1)."],"~$prepend-newline",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",66,"^8",7,"^9",66,"^:",22,"^4=",["^U",["^4>",["^U",[["^4?"],["^4?","~$n"]]]]],"^4L","Prepend a newlines node representing the given number of newlines (default: 1).","^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]]],"^E","^1A","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]],"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4A",null,"^4O",2,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^4P",[["^ ","^4O",1,"^4C",false,"^4Q","^4E"],["^ ","^4O",2,"^4C",false,"^4Q",["^D",["^4R","^4S","^4F"]]]],"^7",66,"^9",66,"^4G",2,"^4H",true,"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4L","Prepend a newlines node representing the given number of newlines (default: 1)."],"~$append-space",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",60,"^8",7,"^9",60,"^:",19,"^4=",["^U",["^4>",["^U",[["^4?"],["^4?","~$n"]]]]],"^4L","Append a whitespace node representing the given number of spaces (default: 1).","^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]]],"^E","^1D","^6","rewrite_clj/zip/whitespace.cljs","^:",19,"^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4B",["^U",[null,null]]],"^4@",["^U",[["^4?"],["^4?","~$n"]]],"^4A",null,"^4O",2,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^4P",[["^ ","^4O",1,"^4C",false,"^4Q","^4E"],["^ ","^4O",2,"^4C",false,"^4Q",["^D",["^4R","^4S","^4F"]]]],"^7",60,"^9",60,"^4G",2,"^4H",true,"^4=",["^U",[["^4?"],["^4?","~$n"]]],"^4L","Append a whitespace node representing the given number of spaces (default: 1)."],"~$skip-whitespace-left",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",47,"^8",7,"^9",47,"^:",27,"^4=",["^U",["^4>",["^U",[["^4?"]]]]],"^4L","Move left until a non-whitespace/non-comment node is encountered."],"^E","^1K","^6","rewrite_clj/zip/whitespace.cljs","^:",27,"^4@",["^U",[["^4?"]]],"^4A",null,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^7",47,"^4D",["^D",["^4E","^4F"]],"^9",47,"^4G",1,"^4H",true,"^4=",["^U",["^4>",["^U",[["^4?"]]]]],"^4L","Move left until a non-whitespace/non-comment node is encountered."],"~$skip-whitespace",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",41,"^8",7,"^9",41,"^:",22,"^4=",["^U",["^4>",["^U",[["^4?"],["~$f","^4?"]]]]],"^4L","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.","^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["~$f","^4?"]]],"^4=",["^U",[["^4?"],["~$f","^4?"]]],"^4B",["^U",[null,null]]]],"^E","^1Z","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4N",["^ ","^4C",false,"^4O",2,"^4G",2,"^4@",["^U",[["^4?"],["~$f","^4?"]]],"^4=",["^U",[["^4?"],["~$f","^4?"]]],"^4B",["^U",[null,null]]],"^4@",["^U",[["^4?"],["~$f","^4?"]]],"^4A",null,"^4O",2,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^4P",[["^ ","^4O",1,"^4C",false,"^4Q","^4E"],["^ ","^4O",2,"^4C",false,"^4Q",["^D",["^4E","^4F"]]]],"^7",41,"^9",41,"^4G",2,"^4H",true,"^4=",["^U",[["^4?"],["~$f","^4?"]]],"^4L","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."],"~$comment?",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",15,"^8",7,"^9",15,"^:",15,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"^E","^1=","^6","rewrite_clj/zip/whitespace.cljs","^:",15,"^4@",["^U",[["^4?"]]],"^4A",null,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^7",15,"^4D",["^D",["^4E","^4F"]],"^9",15,"^4G",1,"^4H",true,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"~$whitespace-not-linebreak?",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",19,"^8",7,"^9",19,"^:",32,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"^E","^1>","^6","rewrite_clj/zip/whitespace.cljs","^:",32,"^4@",["^U",[["^4?"]]],"^4A",null,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^7",19,"^4D",["^D",["~$boolean","^4E","^4F"]],"^9",19,"^4G",1,"^4H",true,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"~$whitespace-or-comment?",["^ ","^4<",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",25,"^8",7,"^9",25,"^:",29,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]],"^E","^1E","^6","rewrite_clj/zip/whitespace.cljs","^:",29,"^4@",["^U",[["^4?"]]],"^4A",null,"^4B",["^U",[null,null]],"^8",1,"^4C",false,"^7",25,"^4D",["^D",["^4E","^4F"]],"^9",25,"^4G",1,"^4H",true,"^4=",["^U",["^4>",["^U",[["^4?"]]]]]]],"^S",["^ ","^N","^N"],"^X",["^ ","^Q",["^D",[]]],"^Y",["^ "],"^Z",["^O","^N","^K","^M"]],"^H","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^20",[["^53","~:static-fns"],true,["^53","~:shadow-tweaks"],null,["^53","~:source-map-inline"],null,["^53","~:elide-asserts"],false,["^53","~:optimize-constants"],null,["^53","^13"],null,["^53","~:external-config"],null,["^53","~:tooling-config"],null,["^53","~:emit-constants"],null,["^53","~:load-tests"],null,["^53","~:form-size-threshold"],null,["^53","~:infer-externs"],true,["^53","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^53","~:fn-invoke-direct"],null,["^53","~:source-map"],"/dev/null"]]]