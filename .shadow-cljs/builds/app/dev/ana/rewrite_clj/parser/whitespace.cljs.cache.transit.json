["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.parser.whitespace');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('rewrite_clj.reader');\n/**\n * Parse as much whitespace as possible. The created node can either contain\n * only linebreaks or only space/tabs.\n */\nrewrite_clj.parser.whitespace.parse_whitespace = (function rewrite_clj$parser$whitespace$parse_whitespace(reader){\nif(rewrite_clj.reader.linebreak_QMARK_((rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1(reader) : rewrite_clj.reader.peek_char.call(null,reader)))){\nvar G__30157 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.linebreak_QMARK_);\nreturn (rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1(G__30157) : rewrite_clj.node.newline_node.call(null,G__30157));\n} else {\nvar G__30158 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.space_QMARK_);\nreturn (rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1(G__30158) : rewrite_clj.node.whitespace_node.call(null,G__30158));\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/parser/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^I","~$node","^I","~$rewrite-clj.reader","^K","~$r","^K","~$cljs.core","^L","~$goog","^M"],"~:seen",["^B",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^L","^L"],"~:form",["~#list",["~$ns","^D",["^S",["^O",["^I","~:as","^J"],["^K","^U","~$r"]]]]],"~:flags",["^ ","^O",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^M","^L","^I","^K"]],"^F","^D","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/parser/whitespace.cljs"],"~:compiled-at",1587374059332,"~:resource-name","rewrite_clj/parser/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.parser.whitespace\n  (:require [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n(defn parse-whitespace\n  \"Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs.\"\n  [^not-native reader]\n  (if (r/linebreak? (r/peek-char reader))\n    (node/newline-node\n      (r/read-while reader r/linebreak?))\n    (node/whitespace-node\n      (r/read-while reader r/space?))))\n","~:reader-features",["^B",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;AAIA;;;;AAAA,AAAMA,AAGSC;AAHf,AAIE,AAAI,AAACC,AAAa,AAACC,AAAAA,AAAAA,AAAYF,AAAAA;AAC7B,AAAAG,AACE,AAACE,AAAaL,AAAOC;AADvB,AAAA,AAAAE,AAAAA,AAACC,AAAAA,AAAAA;;AAED,AAAAE,AACE,AAACD,AAAaL,AAAOQ;AADvB,AAAA,AAAAF,AAAAA,AAACC,AAAAA,AAAAA","names",["rewrite-clj.parser.whitespace/parse-whitespace","reader","rewrite-clj.reader/linebreak?","rewrite-clj.reader/peek-char","G__30157","rewrite-clj.node/newline-node","rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2","G__30158","rewrite-clj.node/whitespace-node","rewrite-clj.reader/space?"]]],"~:cache-keys",["~#cmap",[["^Z","rewrite_clj/node/token.cljs"],[1587365556840,"^M","^L","~$rewrite-clj.node.protocols"],["~:macro","^L"],[1587365553000],["^Z","cljs/tools/reader/impl/utils.cljs"],[1584609213925,"^M","^L","~$clojure.string","~$goog.string"],["^Z","goog/math/math.js"],[1584607223013,"^M","~$goog.array","~$goog.asserts"],["^Z","goog/array/array.js"],[1584607223013,"^M","^1@"],["^1<","~$cljs.tools.reader.reader-types"],[1584609213000],["^Z","goog/debug/error.js"],[1584607223013,"^M"],["^Z","goog/dom/nodetype.js"],[1584607223013,"^M"],["^Z","cljs/tools/reader/impl/inspect.cljs"],[1584609213925,"^M","^L"],["^Z","cljs/tools/reader.cljs"],[1584609213925,"^M","^L","^1A","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1?","^1>","~$goog.string.StringBuffer"],["^Z","rewrite_clj/node/forms.cljs"],[1587365556840,"^M","^L","^1;"],["^Z","goog/object/object.js"],[1584607223013,"^M"],"~:SHADOW-TIMESTAMP",[1587365557000,1587365553000],["^Z","goog/math/long.js"],[1584607223013,"^M","^1@","~$goog.reflect"],["^Z","rewrite_clj/node/reader_macro.cljs"],[1587365556840,"^M","^L","^1;","~$rewrite-clj.node.whitespace"],["^Z","goog/functions/functions.js"],[1584607223013,"^M"],["^Z","clojure/walk.cljs"],[1587365553008,"^M","^L"],["^Z","goog/structs/map.js"],[1584607223013,"^M","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^Z","rewrite_clj/node/meta.cljs"],[1587365556840,"^M","^L","^1;","^1H"],["^Z","rewrite_clj/node/stringz.cljs"],[1587365556840,"^M","^L","^1;","~$cljs.tools.reader","^1="],["^Z","rewrite_clj/node/comment.cljs"],[1587365556840,"^M","^L","^1;"],["^Z","rewrite_clj/node/keyword.cljs"],[1587365556840,"^M","^L","^1;"],["^Z","goog/asserts/asserts.js"],[1584607223013,"^M","~$goog.debug.Error","~$goog.dom.NodeType","^1>"],["^Z","goog/uri/uri.js"],[1584607223013,"^M","^1?","^1@","^1>","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^Z","rewrite_clj/node/protocols.cljs"],[1587365556840,"^M","^L","^1="],["^Z","rewrite_clj/node/seq.cljs"],[1587365556840,"^M","^L","^1;"],["^Z","rewrite_clj/node/uneval.cljs"],[1587365556840,"^M","^L","^1;"],["^Z","goog/base.js"],[1584607223013],["^Z","goog/structs/structs.js"],[1584607223013,"^M","^1?","^1K"],["^Z","cljs/tools/reader/impl/errors.cljs"],[1584609213925,"^M","^L","^1A","^1=","~$cljs.tools.reader.impl.inspect"],["^Z","rewrite_clj/node/whitespace.cljs"],[1587365556840,"^M","^L","^1;"],["^Z","rewrite_clj/node/coercer.cljs"],[1587365556840,"^M","^L","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1;","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^1H"],["^Z","clojure/string.cljs"],[1587365553008,"^M","^L","^1>","^1E"],["^Z","goog/string/string.js"],[1584607223013,"^M"],["^Z","goog/reflect/reflect.js"],[1584607223013,"^M"],["^Z","rewrite_clj/node/fn.cljs"],[1587365556840,"^M","^L","^1;","~$clojure.walk"],["^Z","rewrite_clj/node.cljs"],[1587365556840,"^M","^L","~$rewrite-clj.node.coercer","^1;","^1W","^22","^1H","^23","^1U","^1V","^1[","^1Y","^21","^1X","^1Z","^20"],["^Z","goog/string/stringbuffer.js"],[1584607223013,"^M"],["^Z","cljs/tools/reader/reader_types.cljs"],[1584609213925,"^M","^L","^1B","^1>","^1E"],["^Z","goog/iter/iter.js"],[1584607223013,"^M","^1?","^1@","~$goog.functions","~$goog.math"],["^Z","rewrite_clj/reader.cljs"],[1587365556840,"^M","^L","^1L","^1A","^1C","^1>","^1;"],["^Z","rewrite_clj/node/quote.cljs"],[1587365556840,"^M","^L","^1;"],["^Z","cljs/tools/reader/impl/commons.cljs"],[1584609213925,"^M","^L","^1D","^1A","^1B"],["^Z","cljs/core.cljs"],[1587365553008,"~$goog.math.Long","~$goog.math.Integer","^1>","^1K","^1?","~$goog.Uri","^1E"],["^Z","goog/math/integer.js"],[1584607223013,"^M"],["^Z","goog/uri/utils.js"],[1584607223013,"^M","^1?","^1@","^1>"],["^Z","rewrite_clj/parser/whitespace.cljs"],[1587365556840,"^M","^L","^I","^K"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?"],"^@",null,"^A",["^B",[]],"^C","^D","^G",null,"^H",["^ ","^I","^I","^J","^I","^K","^K","~$r","^K","^L","^L","^M","^M"],"^N",["^B",["^O"]],"^P",null,"~:defs",["^ ","~$parse-whitespace",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",5,"^8",7,"^9",5,"^:",23,"~:arglists",["^S",["~$quote",["^S",[["~$reader"]]]]],"~:doc","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."],"^C","~$rewrite-clj.parser.whitespace/parse-whitespace","^6","rewrite_clj/parser/whitespace.cljs","^:",23,"~:method-params",["^S",[["^2A"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"~:variadic?",false,"^7",5,"~:ret-tag","~$any","^9",5,"~:max-fixed-arity",1,"~:fn-var",true,"^2?",["^S",["^2@",["^S",[["^2A"]]]]],"^2B","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."]],"^Q",["^ ","^L","^L"],"^V",["^ ","^O",["^B",[]]],"^W",["^ "],"^X",["^M","^L","^I","^K"]],"^F","^D","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1:",[["^2N","~:static-fns"],true,["^2N","~:elide-asserts"],false,["^2N","~:optimize-constants"],null,["^2N","^11"],null,["^2N","~:external-config"],null,["^2N","~:tooling-config"],null,["^2N","~:emit-constants"],null,["^2N","~:load-tests"],null,["^2N","~:infer-externs"],true,["^2N","^13"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^2N","~:fn-invoke-direct"],null,["^2N","~:source-map"],"/dev/null"]]]