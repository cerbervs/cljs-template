["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.parser');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.parser.core');\ngoog.require('rewrite_clj.node');\ngoog.require('rewrite_clj.reader');\n/**\n * Parse next form from the given reader.\n */\nrewrite_clj.parser.parse = (function rewrite_clj$parser$parse(reader){\nreturn rewrite_clj.parser.core.parse_next(reader);\n});\n/**\n * Parse all forms from the given reader.\n */\nrewrite_clj.parser.parse_all = (function rewrite_clj$parser$parse_all(reader){\nvar nodes = cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1((function (){\nreturn rewrite_clj.parser.parse(reader);\n}))));\nreturn cljs.core.with_meta((rewrite_clj.node.forms_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.forms_node.cljs$core$IFn$_invoke$arity$1(nodes) : rewrite_clj.node.forms_node.call(null,nodes)),cljs.core.meta(cljs.core.first(nodes)));\n});\n/**\n * Parse first form in the given string.\n */\nrewrite_clj.parser.parse_string = (function rewrite_clj$parser$parse_string(s){\nreturn rewrite_clj.parser.parse((rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(s) : rewrite_clj.reader.indexing_push_back_reader.call(null,s)));\n});\n/**\n * Parse all forms in the given string.\n */\nrewrite_clj.parser.parse_string_all = (function rewrite_clj$parser$parse_string_all(s){\nreturn rewrite_clj.parser.parse_all((rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(s) : rewrite_clj.reader.indexing_push_back_reader.call(null,s)));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/parser.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",23],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.parser.core","^I","~$p","^I","~$rewrite-clj.node","^J","~$node","^J","~$rewrite-clj.reader","^L","~$r","^L","~$cljs.core","^M","~$goog","^N"],"~:seen",["^B",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^D",["^T",["^P",["^I","~:as","~$p"],["^J","^V","^K"],["^L","^V","~$r"]]]]],"~:flags",["^ ","^P",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^N","^M","^I","^J","^L"]],"^F","^D","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/parser.cljs"],"~:compiled-at",1587374059387,"~:resource-name","rewrite_clj/parser.cljs","~:warnings",[],"~:source","(ns rewrite-clj.parser\n  (:require [rewrite-clj.parser.core :as p]\n            [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n;; ## Parser Core\n\n(defn parse\n  \"Parse next form from the given reader.\"\n  [^not-native reader]\n  (p/parse-next reader))\n\n(defn parse-all\n  \"Parse all forms from the given reader.\"\n  [^not-native reader]\n  (let [nodes (->> (repeatedly #(parse reader))\n                   (take-while identity)\n                   (doall))]\n    (with-meta\n      (node/forms-node nodes)\n      (meta (first nodes)))))\n\n;; ## Specialized Parsers\n\n(defn parse-string\n  \"Parse first form in the given string.\"\n  [s]\n  (parse (r/indexing-push-back-reader s)))\n\n(defn parse-string-all\n  \"Parse all forms in the given string.\"\n  [s]\n  (parse-all (r/indexing-push-back-reader s)))\n\n\n","~:reader-features",["^B",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;AAOA;;;AAAA,AAAMA,AAESC;AAFf,AAGE,AAACC,AAAaD;;AAEhB;;;AAAA,AAAME,AAESF;AAFf,AAGE,AAAMG,AAAW,AAAA,AAACC,AACD,AAACC,AAAWC,AACZ,AAACC;AAFD,AAAa,AAACR,AAAMC;;AAArC,AAGE,AAACQ,AACC,AAACC,AAAAA,AAAAA,AAAgBN,AAAAA,AACjB,AAACO,AAAK,AAACC,AAAMR;;AAInB;;;AAAA,AAAMS,AAEHC;AAFH,AAGE,AAACd,AAAM,AAACe,AAAAA,AAAAA,AAA4BD,AAAAA;;AAEtC;;;AAAA,AAAME,AAEHF;AAFH,AAGE,AAACX,AAAU,AAACY,AAAAA,AAAAA,AAA4BD,AAAAA","names",["rewrite-clj.parser/parse","reader","rewrite-clj.parser.core/parse-next","rewrite-clj.parser/parse-all","nodes","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","cljs.core.take_while.cljs$core$IFn$_invoke$arity$2","cljs.core/identity","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","cljs.core/with-meta","rewrite-clj.node/forms-node","cljs.core/meta","cljs.core/first","rewrite-clj.parser/parse-string","s","rewrite-clj.reader/indexing-push-back-reader","rewrite-clj.parser/parse-string-all"]]],"~:cache-keys",["~#cmap",[["^[","rewrite_clj/node/token.cljs"],[1587365556840,"^N","^M","~$rewrite-clj.node.protocols"],["~:macro","^M"],[1587365553000],["^[","cljs/tools/reader/impl/utils.cljs"],[1584609213925,"^N","^M","~$clojure.string","~$goog.string"],["^[","goog/math/math.js"],[1584607223013,"^N","~$goog.array","~$goog.asserts"],["^[","rewrite_clj/parser/core.cljs"],[1587365556840,"^N","^M","^J","^L","~$rewrite-clj.parser.keyword","~$rewrite-clj.parser.string","~$rewrite-clj.parser.token","~$rewrite-clj.parser.whitespace","~$cljs.tools.reader.reader-types"],["^[","rewrite_clj/parser/string.cljs"],[1587365556840,"^N","^M","^J","^L","^1?"],["^[","goog/array/array.js"],[1584607223013,"^N","^1A"],["^1=","^1F"],[1584609213000],["^[","goog/debug/error.js"],[1584607223013,"^N"],["^[","goog/dom/nodetype.js"],[1584607223013,"^N"],["^[","cljs/tools/reader/impl/inspect.cljs"],[1584609213925,"^N","^M"],["^[","cljs/tools/reader.cljs"],[1584609213925,"^N","^M","^1F","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1@","^1?","~$goog.string.StringBuffer"],["^[","rewrite_clj/node/forms.cljs"],[1587365556840,"^N","^M","^1<"],["^[","goog/object/object.js"],[1584607223013,"^N"],"~:SHADOW-TIMESTAMP",[1587365557000,1587365553000],["^[","goog/math/long.js"],[1584607223013,"^N","^1A","~$goog.reflect"],["^[","rewrite_clj/node/reader_macro.cljs"],[1587365556840,"^N","^M","^1<","~$rewrite-clj.node.whitespace"],["^[","goog/functions/functions.js"],[1584607223013,"^N"],["^[","clojure/walk.cljs"],[1587365553008,"^N","^M"],["^[","goog/structs/map.js"],[1584607223013,"^N","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^[","rewrite_clj/node/meta.cljs"],[1587365556840,"^N","^M","^1<","^1M"],["^[","rewrite_clj/node/stringz.cljs"],[1587365556840,"^N","^M","^1<","~$cljs.tools.reader","^1>"],["^[","rewrite_clj/node/comment.cljs"],[1587365556840,"^N","^M","^1<"],["^[","rewrite_clj/node/keyword.cljs"],[1587365556840,"^N","^M","^1<"],["^[","goog/asserts/asserts.js"],[1584607223013,"^N","~$goog.debug.Error","~$goog.dom.NodeType","^1?"],["^[","goog/uri/uri.js"],[1584607223013,"^N","^1@","^1A","^1?","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^[","rewrite_clj/node/protocols.cljs"],[1587365556840,"^N","^M","^1>"],["^[","rewrite_clj/node/seq.cljs"],[1587365556840,"^N","^M","^1<"],["^[","rewrite_clj/node/uneval.cljs"],[1587365556840,"^N","^M","^1<"],["^[","goog/base.js"],[1584607223013],["^[","goog/structs/structs.js"],[1584607223013,"^N","^1@","^1P"],["^[","cljs/tools/reader/impl/errors.cljs"],[1584609213925,"^N","^M","^1F","^1>","~$cljs.tools.reader.impl.inspect"],["^[","rewrite_clj/node/whitespace.cljs"],[1587365556840,"^N","^M","^1<"],["^[","rewrite_clj/node/coercer.cljs"],[1587365556840,"^N","^M","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1<","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^1M"],["^[","clojure/string.cljs"],[1587365553008,"^N","^M","^1?","^1J"],["^[","rewrite_clj/parser.cljs"],[1587365556840,"^N","^M","^I","^J","^L"],["^[","rewrite_clj/parser/keyword.cljs"],[1587365556840,"^N","^M","^J","^1F","^L"],["^[","rewrite_clj/parser/token.cljs"],[1587365556840,"^N","^M","^J","^L","^1?"],["^[","goog/string/string.js"],[1584607223013,"^N"],["^[","goog/reflect/reflect.js"],[1584607223013,"^N"],["^[","rewrite_clj/node/fn.cljs"],[1587365556840,"^N","^M","^1<","~$clojure.walk"],["^[","rewrite_clj/node.cljs"],[1587365556840,"^N","^M","~$rewrite-clj.node.coercer","^1<","^20","^27","^1M","^28","^1Z","^1[","^24","^22","^26","^21","^23","^25"],["^[","goog/string/stringbuffer.js"],[1584607223013,"^N"],["^[","cljs/tools/reader/reader_types.cljs"],[1584609213925,"^N","^M","^1G","^1?","^1J"],["^[","goog/iter/iter.js"],[1584607223013,"^N","^1@","^1A","~$goog.functions","~$goog.math"],["^[","rewrite_clj/reader.cljs"],[1587365556840,"^N","^M","^1Q","^1F","^1H","^1?","^1<"],["^[","rewrite_clj/node/quote.cljs"],[1587365556840,"^N","^M","^1<"],["^[","cljs/tools/reader/impl/commons.cljs"],[1584609213925,"^N","^M","^1I","^1F","^1G"],["^[","cljs/core.cljs"],[1587365553008,"~$goog.math.Long","~$goog.math.Integer","^1?","^1P","^1@","~$goog.Uri","^1J"],["^[","goog/math/integer.js"],[1584607223013,"^N"],["^[","goog/uri/utils.js"],[1584607223013,"^N","^1@","^1A","^1?"],["^[","rewrite_clj/parser/whitespace.cljs"],[1587365556840,"^N","^M","^J","^L"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",1,"^8",5,"^9",1,"^:",23],"^;",["^ ","^<","^=","^>","^?"],"^@",null,"^A",["^B",[]],"^C","^D","^G",null,"^H",["^ ","^I","^I","~$p","^I","^J","^J","^K","^J","^L","^L","~$r","^L","^M","^M","^N","^N"],"^O",["^B",["^P"]],"^Q",null,"~:defs",["^ ","~$parse",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",8,"^8",7,"^9",8,"^:",12,"~:arglists",["^T",["~$quote",["^T",[["~$reader"]]]]],"~:doc","Parse next form from the given reader."],"^C","~$rewrite-clj.parser/parse","^6","rewrite_clj/parser.cljs","^:",12,"~:method-params",["^T",[["^2F"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^8",1,"~:variadic?",false,"^7",8,"~:ret-tag",["^B",["~$clj","~$clj-nil"]],"^9",8,"~:max-fixed-arity",1,"~:fn-var",true,"^2D",["^T",["^2E",["^T",[["^2F"]]]]],"^2G","Parse next form from the given reader."],"~$parse-all",["^ ","^2C",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",13,"^8",7,"^9",13,"^:",16,"^2D",["^T",["^2E",["^T",[["^2F"]]]]],"^2G","Parse all forms from the given reader."],"^C","~$rewrite-clj.parser/parse-all","^6","rewrite_clj/parser.cljs","^:",16,"^2I",["^T",[["^2F"]]],"^2J",null,"^2K",["^T",[null,null]],"^8",1,"^2L",false,"^7",13,"^2M",["^B",["^2N","~$cljs.core/MetaFn","^2O"]],"^9",13,"^2P",1,"^2Q",true,"^2D",["^T",["^2E",["^T",[["^2F"]]]]],"^2G","Parse all forms from the given reader."],"~$parse-string",["^ ","^2C",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",25,"^8",7,"^9",25,"^:",19,"^2D",["^T",["^2E",["^T",[["~$s"]]]]],"^2G","Parse first form in the given string."],"^C","~$rewrite-clj.parser/parse-string","^6","rewrite_clj/parser.cljs","^:",19,"^2I",["^T",[["~$s"]]],"^2J",null,"^2K",["^T",[null,null]],"^8",1,"^2L",false,"^7",25,"^2M",["^B",["^2N","^2O"]],"^9",25,"^2P",1,"^2Q",true,"^2D",["^T",["^2E",["^T",[["~$s"]]]]],"^2G","Parse first form in the given string."],"~$parse-string-all",["^ ","^2C",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",30,"^8",7,"^9",30,"^:",23,"^2D",["^T",["^2E",["^T",[["~$s"]]]]],"^2G","Parse all forms in the given string."],"^C","~$rewrite-clj.parser/parse-string-all","^6","rewrite_clj/parser.cljs","^:",23,"^2I",["^T",[["~$s"]]],"^2J",null,"^2K",["^T",[null,null]],"^8",1,"^2L",false,"^7",30,"^2M",["^B",["^2N","^2T","^2O"]],"^9",30,"^2P",1,"^2Q",true,"^2D",["^T",["^2E",["^T",[["~$s"]]]]],"^2G","Parse all forms in the given string."]],"^R",["^ ","^M","^M"],"^W",["^ ","^P",["^B",[]]],"^X",["^ "],"^Y",["^N","^M","^I","^J","^L"]],"^F","^D","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1;",[["^2[","~:static-fns"],true,["^2[","~:elide-asserts"],false,["^2[","~:optimize-constants"],null,["^2[","^12"],null,["^2[","~:external-config"],null,["^2[","~:tooling-config"],null,["^2[","~:emit-constants"],null,["^2[","~:load-tests"],null,["^2[","~:infer-externs"],true,["^2[","^14"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^2[","~:fn-invoke-direct"],null,["^2[","~:source-map"],"/dev/null"]]]