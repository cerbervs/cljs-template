["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nreagent.ratom.debug = false;\nreagent.ratom.generation = (0);\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn cljs.core.deref(reagent.ratom._running);\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nif((len === reagent.ratom.arr_len(y))){\nvar i = (0);\nwhile(true){\nvar or__4185__auto__ = (i === len);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__7928 = (i + (1));\ni = G__7928;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn false;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__7849 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__7850 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__7850);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__7849);\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5739__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__7851_SHARP_,p2__7852_SHARP_,p3__7853_SHARP_){\nvar G__7855 = p1__7851_SHARP_;\nG__7855.push(p2__7852_SHARP_);\n\nG__7855.push(p3__7853_SHARP_);\n\nreturn G__7855;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_7929 = (a[i]);\nvar f_7930 = (a[(i + (1))]);\n(f_7930.cljs$core$IFn$_invoke$arity$4 ? f_7930.cljs$core$IFn$_invoke$arity$4(k_7929,this$,old,new$) : f_7930.call(null,k_7929,this$,old,new$));\n\nvar G__7931 = ((2) + i);\ni = G__7931;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__7856 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__7857 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__7857);\n\ntry{return cljs.core._deref(a);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__7856);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nreagent.ratom.rea_queue = null;\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__4666__auto___7932 = q.length;\nvar i_7933 = (0);\nwhile(true){\nif((i_7933 < n__4666__auto___7932)){\n(q[i_7933])._queued_run();\n\nvar G__7934 = (i_7933 + (1));\ni_7933 = G__7934;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__7861 = arguments.length;\nswitch (G__7861) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4810__auto__ = [];\nvar len__4789__auto___7939 = arguments.length;\nvar i__4790__auto___7940 = (0);\nwhile(true){\nif((i__4790__auto___7940 < len__4789__auto___7939)){\nargs_arr__4810__auto__.push((arguments[i__4790__auto___7940]));\n\nvar G__7941 = (i__4790__auto___7940 + (1));\ni__4790__auto___7940 = G__7941;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4811__auto__ = (new cljs.core.IndexedSeq(args_arr__4810__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4811__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__7862){\nvar map__7863 = p__7862;\nvar map__7863__$1 = (((((!((map__7863 == null))))?(((((map__7863.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__7863.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7863):map__7863);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7863__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7863__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq7859){\nvar G__7860 = cljs.core.first(seq7859);\nvar seq7859__$1 = cljs.core.next(seq7859);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7860,seq7859__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__7866 = f;\nvar G__7867 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__7868 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __7943 = o.reagReactionCache;\nvar __7944__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__7943,k);\n(o.reagReactionCache = __7944__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__7866,G__7867,G__7868) : reagent.ratom.make_reaction.call(null,G__7866,G__7867,G__7868));\n})();\nvar v = cljs.core._deref(r__$1);\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__7869 = (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__7870 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__7871 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__7869,G__7870,G__7871) : reagent.ratom.make_reaction.call(null,G__7869,G__7870,G__7871));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___7947 = arguments.length;\nvar i__4790__auto___7948 = (0);\nwhile(true){\nif((i__4790__auto___7948 < len__4789__auto___7947)){\nargs__4795__auto__.push((arguments[i__4790__auto___7948]));\n\nvar G__7949 = (i__4790__auto___7948 + (1));\ni__4790__auto___7948 = G__7949;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq7872){\nvar G__7873 = cljs.core.first(seq7872);\nvar seq7872__$1 = cljs.core.next(seq7872);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7873,seq7872__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___7952 = arguments.length;\nvar i__4790__auto___7953 = (0);\nwhile(true){\nif((i__4790__auto___7953 < len__4789__auto___7952)){\nargs__4795__auto__.push((arguments[i__4790__auto___7953]));\n\nvar G__7956 = (i__4790__auto___7953 + (1));\ni__4790__auto___7953 = G__7956;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq7874){\nvar G__7875 = cljs.core.first(seq7874);\nvar seq7874__$1 = cljs.core.next(seq7874);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7875,seq7874__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__7876 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__7877 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__7877);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__7876);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__7879 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7879) : f.call(null,G__7879));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__7880 = a__$1._peek();\nvar G__7881 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7880,G__7881) : f.call(null,G__7880,G__7881));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__7882 = a__$1._peek();\nvar G__7883 = x;\nvar G__7884 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7882,G__7883,G__7884) : f.call(null,G__7882,G__7883,G__7884));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5739__auto__ = v.destroy;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5739__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5737__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5737__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\n} else {\nvar m__4485__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n}\n});\n\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4488__auto__.call(null,this$,f));\n} else {\nvar m__4485__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4485__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (reagent.ratom.run[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\n} else {\nvar m__4485__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__7887 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__7888 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__7888);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__7887);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__7889_7973 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__7890_7974 = null;\nvar count__7891_7975 = (0);\nvar i__7892_7976 = (0);\nwhile(true){\nif((i__7892_7976 < count__7891_7975)){\nvar w_7977 = chunk__7890_7974.cljs$core$IIndexed$_nth$arity$2(null,i__7892_7976);\ncljs.core._add_watch(w_7977,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__7978 = seq__7889_7973;\nvar G__7979 = chunk__7890_7974;\nvar G__7980 = count__7891_7975;\nvar G__7981 = (i__7892_7976 + (1));\nseq__7889_7973 = G__7978;\nchunk__7890_7974 = G__7979;\ncount__7891_7975 = G__7980;\ni__7892_7976 = G__7981;\ncontinue;\n} else {\nvar temp__5735__auto___7982 = cljs.core.seq(seq__7889_7973);\nif(temp__5735__auto___7982){\nvar seq__7889_7983__$1 = temp__5735__auto___7982;\nif(cljs.core.chunked_seq_QMARK_(seq__7889_7983__$1)){\nvar c__4609__auto___7984 = cljs.core.chunk_first(seq__7889_7983__$1);\nvar G__7985 = cljs.core.chunk_rest(seq__7889_7983__$1);\nvar G__7986 = c__4609__auto___7984;\nvar G__7987 = cljs.core.count(c__4609__auto___7984);\nvar G__7988 = (0);\nseq__7889_7973 = G__7985;\nchunk__7890_7974 = G__7986;\ncount__7891_7975 = G__7987;\ni__7892_7976 = G__7988;\ncontinue;\n} else {\nvar w_7989 = cljs.core.first(seq__7889_7983__$1);\ncljs.core._add_watch(w_7989,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__7990 = cljs.core.next(seq__7889_7983__$1);\nvar G__7991 = null;\nvar G__7992 = (0);\nvar G__7993 = (0);\nseq__7889_7973 = G__7990;\nchunk__7890_7974 = G__7991;\ncount__7891_7975 = G__7992;\ni__7892_7976 = G__7993;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__7893 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__7894 = null;\nvar count__7895 = (0);\nvar i__7896 = (0);\nwhile(true){\nif((i__7896 < count__7895)){\nvar w = chunk__7894.cljs$core$IIndexed$_nth$arity$2(null,i__7896);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__7994 = seq__7893;\nvar G__7995 = chunk__7894;\nvar G__7996 = count__7895;\nvar G__7997 = (i__7896 + (1));\nseq__7893 = G__7994;\nchunk__7894 = G__7995;\ncount__7895 = G__7996;\ni__7896 = G__7997;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__7893);\nif(temp__5735__auto__){\nvar seq__7893__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__7893__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__7893__$1);\nvar G__7998 = cljs.core.chunk_rest(seq__7893__$1);\nvar G__7999 = c__4609__auto__;\nvar G__8000 = cljs.core.count(c__4609__auto__);\nvar G__8001 = (0);\nseq__7893 = G__7998;\nchunk__7894 = G__7999;\ncount__7895 = G__8000;\ni__7896 = G__8001;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__7893__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__8003 = cljs.core.next(seq__7893__$1);\nvar G__8004 = null;\nvar G__8005 = (0);\nvar G__8006 = (0);\nseq__7893 = G__8003;\nchunk__7894 = G__8004;\ncount__7895 = G__8005;\ni__7896 = G__8006;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e7897){var e = e7897;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__7898){\nvar self__ = this;\nvar map__7901 = p__7898;\nvar map__7901__$1 = (((((!((map__7901 == null))))?(((((map__7901.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__7901.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7901):map__7901);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7901__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7901__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7901__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7901__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__7906_8013 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__7907_8014 = null;\nvar count__7908_8015 = (0);\nvar i__7909_8016 = (0);\nwhile(true){\nif((i__7909_8016 < count__7908_8015)){\nvar w_8017 = chunk__7907_8014.cljs$core$IIndexed$_nth$arity$2(null,i__7909_8016);\ncljs.core._remove_watch(w_8017,this$__$1);\n\n\nvar G__8018 = seq__7906_8013;\nvar G__8019 = chunk__7907_8014;\nvar G__8020 = count__7908_8015;\nvar G__8021 = (i__7909_8016 + (1));\nseq__7906_8013 = G__8018;\nchunk__7907_8014 = G__8019;\ncount__7908_8015 = G__8020;\ni__7909_8016 = G__8021;\ncontinue;\n} else {\nvar temp__5735__auto___8022 = cljs.core.seq(seq__7906_8013);\nif(temp__5735__auto___8022){\nvar seq__7906_8023__$1 = temp__5735__auto___8022;\nif(cljs.core.chunked_seq_QMARK_(seq__7906_8023__$1)){\nvar c__4609__auto___8026 = cljs.core.chunk_first(seq__7906_8023__$1);\nvar G__8027 = cljs.core.chunk_rest(seq__7906_8023__$1);\nvar G__8028 = c__4609__auto___8026;\nvar G__8029 = cljs.core.count(c__4609__auto___8026);\nvar G__8030 = (0);\nseq__7906_8013 = G__8027;\nchunk__7907_8014 = G__8028;\ncount__7908_8015 = G__8029;\ni__7909_8016 = G__8030;\ncontinue;\n} else {\nvar w_8031 = cljs.core.first(seq__7906_8023__$1);\ncljs.core._remove_watch(w_8031,this$__$1);\n\n\nvar G__8032 = cljs.core.next(seq__7906_8023__$1);\nvar G__8033 = null;\nvar G__8034 = (0);\nvar G__8035 = (0);\nseq__7906_8013 = G__8032;\nchunk__7907_8014 = G__8033;\ncount__7908_8015 = G__8034;\ni__7909_8016 = G__8035;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5739__auto__;\nvar n__4666__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4666__auto__)){\nvar fexpr__7911_8036 = (a[i]);\n(fexpr__7911_8036.cljs$core$IFn$_invoke$arity$1 ? fexpr__7911_8036.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__7911_8036.call(null,this$__$1));\n\nvar G__8039 = (i + (1));\ni = G__8039;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\nif((temp__5737__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5737__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__7912 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7912) : f__$1.call(null,G__7912));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__7913 = a__$1._peek_at();\nvar G__7914 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__7913,G__7914) : f__$1.call(null,G__7913,G__7914));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__7916 = a__$1._peek_at();\nvar G__7917 = x;\nvar G__7918 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__7916,G__7917,G__7918) : f__$1.call(null,G__7916,G__7917,G__7918));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5739__auto___8043 = self__.caught;\nif((temp__5739__auto___8043 == null)){\n} else {\nvar e_8044 = temp__5739__auto___8043;\nthrow e_8044;\n}\n\nvar non_reactive_8045 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_8045){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_8045) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_8046 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_8046,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_8046,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___8051 = arguments.length;\nvar i__4790__auto___8052 = (0);\nwhile(true){\nif((i__4790__auto___8052 < len__4789__auto___8051)){\nargs__4795__auto__.push((arguments[i__4790__auto___8052]));\n\nvar G__8053 = (i__4790__auto___8052 + (1));\ni__4790__auto___8052 = G__8053;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__7923){\nvar map__7924 = p__7923;\nvar map__7924__$1 = (((((!((map__7924 == null))))?(((((map__7924.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__7924.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7924):map__7924);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7924__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7924__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7924__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq7921){\nvar G__7922 = cljs.core.first(seq7921);\nvar seq7921__$1 = cljs.core.next(seq7921);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7922,seq7921__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^D"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^K",["^L",[["~$&","^N"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^O","~$reagent.ratom/reaction","^Q","^R","^S",true],"~$run!",["^ ","^K",["^L",[["~$&","^N"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^O","~$reagent.ratom/run!","^Q","^R","^S",true]],"^O","^R","~:op","^Q","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^10","~$obj","~$goog.object","~$cljs.core","^13","~$goog","^14","^12","^12","~$reagent.impl.batching","^15","~$clojure.set","^16","~$util","^10","~$s","^16","~$batch","^15","^D","^D"],"~:seen",["^G",["~:require","~:require-macros"]],"~:uses",null,"^1;",["^ ","^R","^R","^D","^D","^13","^13"],"~:form",["^L",["~$ns","^R",["^L",["~:refer-clojure","~:exclude",["^H"]]],["^L",["^1;",["^R"]]],["^L",["^1:",["^10","~:as","^17"],["^D","~:refer-macros",["^C","^E"]],["^15","^1A","^18"],["^16","^1A","~$s"],["^12","^1A","^11"]]]]],"~:flags",["^ ","^1;",["^G",[]],"^1:",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^10","^D","^15","^16","^12"]],"^Q","^R","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1611071936862,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.ratom/debug","reagent.ratom/generation","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","i","or__4185__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__7849","*ratom-context*-temp-val__7850","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__7851#","p2__7852#","p3__7853#","cljs.core/reduce-kv","G__7855","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__7856","*ratom-context*-temp-val__7857","cljs.core/-deref","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4666__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__7861","reagent.ratom/atom","args-arr__4810__auto__","len__4789__auto__","i__4790__auto__","argseq__4811__auto__","cljs.core/IndexedSeq","p__7862","map__7863","cljs.core/hash-map","cljs.core.get","seq7859","G__7860","cljs.core/first","cljs.core/next","self__4776__auto__","reagent.ratom/cached-reaction","destroy","m","G__7866","G__7867","G__7868","reagent.ratom/make-reaction","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__7869","G__7870","G__7871","args__4795__auto__","argseq__4796__auto__","reagent.ratom/track","seq7872","G__7873","reagent.ratom/track!","seq7874","G__7875","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__7876","*ratom-context*-temp-val__7877","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__7879","G__7880","G__7881","G__7882","G__7883","G__7884","reagent.ratom/cursor","src","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4487__auto__","m__4488__auto__","reagent.ratom/dispose!","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__7898","map__7901","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","oldval","G__7912","G__7913","G__7914","G__7916","G__7917","G__7918","*ratom-context*-orig-val__7887","*ratom-context*-temp-val__7888","cljs.core/set","seq__7889","cljs.core/seq","chunk__7890","count__7891","i__7892","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__7893","chunk__7894","count__7895","i__7896","cljs.core/-remove-watch","e7897","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__7906","chunk__7907","count__7908","i__7909","fexpr__7911","p__7923","map__7924","seq7921","G__7922","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^G",["~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$cljs.core/=","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$reagent.ratom/arr-len","~$cljs.core/apply","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.ratom/RCursor","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$reagent.ratom/arr-eq","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$cljs.core/-remove-watch","~$cljs.core/missing-protocol","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$reagent.ratom/RAtom","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],[1611071514053,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^14","^13","^D","^10"]]],["^1G","goog/dom/tagname.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","~$goog.dom.HtmlElement"]]],["^1G","goog/math/math.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","~$goog.array","~$goog.asserts"]]],["^1G","goog/html/trustedtypes.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/labs/useragent/browser.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","~$goog.labs.userAgent.util","^12","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3Y"]]],["^1G","goog/array/array.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W"]]],["^1G","reagent/impl/util.cljs"],[1611071514053,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^13","~$clojure.string"]]],["^1G","goog/debug/error.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/dom/nodetype.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","reagent/ratom.cljs"],[1611071514053,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^13","^10","^D","^15","^16","^12"]]],["^1G","goog/string/typedstring.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/object/object.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/dom/asserts.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W"]]],"~:SHADOW-TIMESTAMP",[1611071515000,1611071515000,1611071513000],["^1G","goog/math/long.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W","~$goog.html.trustedtypes","^40","^41","^42","^43"]]],["^1G","goog/string/internal.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/functions/functions.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/html/safestyle.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","^3W","~$goog.html.SafeUrl","^42","^43","^3Y"]]],["^1G","goog/dom/safe.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^48","^3[","~$goog.html.uncheckedconversions","^42","^3Y"]]],["^1G","goog/structs/map.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1G","goog/html/safehtml.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","^3W","~$goog.dom.TagName","~$goog.dom.tags","^4<","^4=","~$goog.html.SafeStyleSheet","^48","^3[","^47","^40","^41","~$goog.labs.userAgent.browser","^12","^42","^43","^3Y"]]],["^1G","goog/dom/tags.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^12"]]],["^1G","goog/asserts/asserts.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","goog/uri/uri.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","^3W","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/i18n/bidi.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/fs/url.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/base.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",[]]],["^1G","goog/structs/structs.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","^12"]]],["^1G","clojure/string.cljs"],[1611071513180,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^13","^4G","~$goog.string.StringBuffer"]]],["^1G","goog/string/string.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","~$goog.dom.safe","^4>","^42","^3Y"]]],["^1G","goog/reflect/reflect.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/labs/useragent/util.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3Y"]]],["^1G","goog/string/stringbuffer.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","goog/iter/iter.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","^3W","^4:","~$goog.math"]]],["^1G","goog/html/uncheckedconversions.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W","^4;","^4<","^4=","^4C","^48","^3[","^42","^3Y"]]],["^1G","goog/dom/htmlelement.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14"]]],["^1G","cljs/core.cljs"],[1611071513180,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","~$goog.math.Long","~$goog.math.Integer","^4G","^12","^3V","~$goog.Uri","^4M"]]],["^1G","goog/html/safescript.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W","^47","^42","^43"]]],["^1G","reagent/debug.cljs"],[1611071514053,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^13"]]],["^1G","goog/html/safestylesheet.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","^3W","^4=","^12","^42","^43","^3Y"]]],["^1G","goog/math/integer.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^46"]]],["^1G","clojure/set.cljs"],[1611071513180,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^13"]]],["^1G","goog/uri/utils.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3V","^3W","^4G"]]],["^1G","goog/string/const.js"],[1611071510313,"^3Q",["^ ","^3R",null,"^3S",["^G",[]],"^3T",["^14","^3W","^43"]]]]],"~:clj-info",["^ ","jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1611071507000,"jar:file:/home/mark/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1611071514000,"jar:file:/home/mark/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611071506000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1611071507000,"jar:file:/home/mark/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1611071514000,"jar:file:/home/mark/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1611071514000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1611071507000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1611071513000,"jar:file:/home/mark/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1611071513000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^G",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^B",["^ ","^C","^D","^E","^D"],"^F",["^G",["^H"]],"^I",["^ ","^J",["^ ","^K",["^L",[["^M","~$&","^N"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","^O","^P","^Q","^R","^S",true],"^T",["^ ","^K",["^L",[["~$&","^N"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^O","^U","^Q","^R","^S",true],"^V",["^ ","^K",["^L",[["~$&","^N"]]],"^W","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^O","^X","^Q","^R","^S",true]],"~:shadow/js-access-properties",["^G",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^O","^R","^Z",null,"^[",["^ ","^10","^10","^11","^12","^13","^13","^14","^14","^12","^12","^15","^15","^16","^16","^17","^10","~$s","^16","^18","^15","^D","^D"],"^19",["^G",["^1:","^1;"]],"^1<",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",105,"^8",8,"^9",105,"^:",15,"~:private",true,"^K",["^L",["~$quote",["^L",[["~$a","~$writer","~$opts","~$s"]]]]]],"^5I",true,"^O","^3N","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^L",[["~$a","^5K","^5L","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^8",1,"~:variadic?",false,"^7",105,"~:ret-tag","~$any","^9",105,"~:max-fixed-arity",4,"~:fn-var",true,"^K",["^L",["^5J",["^L",[["~$a","^5K","^5L","~$s"]]]]]],"~$->RCursor",["^ ","^5H",null,"^5",["^ ","~:protocols",["^G",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2F","^3:","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",257,"^9",257,"^K",["^L",["^5J",["^L",[["~$ratom","~$path","^T","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^3:","^62"]],"^W","Positional factory function for reagent.ratom/RCursor."],"^5V",["^G",["^5W","^5X","^5Y","^5Z","^5[","^60","^61","^2F","^3:","^62"]],"^O","^3L","^6","reagent/ratom.cljs","^:",17,"^5M",["^L",[["^65","^66","^T","^67","^68"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^63","^64","^7",257,"^5Q","^2B","^9",257,"^5S",5,"^5T",true,"^K",["^L",["^5J",["^L",[["^65","^66","^T","^67","^68"]]]]],"^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^3:","^62"]],"^W","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",63,"^8",8,"^9",63,"^:",29,"^5I",true,"^K",["^L",["^5J",["^L",[["~$derefed"]]]]],"^W","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^5I",true,"^O","^2:","^6","reagent/ratom.cljs","^:",29,"^5M",["^L",[["^6;"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",63,"^5Q",["^G",[null,"^5R","~$clj-nil"]],"^9",63,"^5S",1,"^5T",true,"^K",["^L",["^5J",["^L",[["^6;"]]]]],"^W","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",8,"^9",115,"^:",19,"^5I",true,"^K",["^L",["^5J",["^L",[["~$r"]]]]]],"^5I",true,"^O","^2A","^6","reagent/ratom.cljs","^:",19,"^5M",["^L",[["~$r"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",115,"^5Q","^5R","^9",115,"^5S",1,"^5T",true,"^K",["^L",["^5J",["^L",[["~$r"]]]]]],"~$in-context",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",36,"^8",8,"^9",36,"^:",18,"^5I",true,"^K",["^L",["^5J",["^L",[["^11","~$f"]]]]],"^W","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^5I",true,"^O","^3I","^6","reagent/ratom.cljs","^:",18,"^5M",["^L",[["^11","~$f"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",36,"^9",36,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["^11","~$f"]]]]],"^W","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",237,"^8",7,"^9",237,"^:",17,"^K",["^L",["^5J",["^L",[["~$f","~$args"]]]]]],"^O","^3=","^6","reagent/ratom.cljs","^:",17,"^5M",["^L",[["~$f","^6@"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",237,"^5Q","^39","^9",237,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f","^6@"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^5V",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^2F","~$cljs.core/IMeta","^3:","^62","~$cljs.core/IWithMeta"]],"^O","^3C","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",137,"~:record",false,"^9",137,"~:tag","~$function","^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^6C","^3:","^62","^6D"]]],"^H",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",7,"^9",182,"^:",11,"^K",["^L",["^5J",["^L",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^W","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^5P",true,"~:fixed-arity",1,"^5S",1,"^5M",["^L",[["~$x"]]],"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6I",["^6J","^6K"]]]]],"^5O",["^L",[null,null]]]],"^O","^3E","^6","reagent/ratom.cljs","^:",11,"^6L",["^ ","^5P",true,"^6M",1,"^5S",1,"^5M",["^L",[["~$x"]]],"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6I",["^6J","^6K"]]]]],"^5O",["^L",[null,null]]],"^5M",["^L",[["~$x"]]],"^5N",null,"^6M",1,"^5O",["^L",[null,null]],"^8",1,"^5P",true,"~:methods",[["^ ","^6M",1,"^5P",false,"^6G","^3C"],["^ ","^6M",1,"^5P",true,"^6G","^3C"]],"^7",182,"^9",182,"^5S",1,"^5T",true,"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6I",["^6J","^6K"]]]]],"^W","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",89,"^8",8,"^9",89,"^:",16,"^5I",true,"^K",["^L",["^5J",["^L",[["~$this","~$old","~$new"]]]]]],"^5I",true,"^O","^2S","^6","reagent/ratom.cljs","^:",16,"^5M",["^L",[["^6P","^6Q","^6R"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",89,"^5Q","^6<","^9",89,"^5S",3,"^5T",true,"^K",["^L",["^5J",["^L",[["^6P","^6Q","^6R"]]]]]],"~$->Reaction",["^ ","^5H",null,"^5",["^ ","^5V",["^G",["^5W","^5X","^5Y","^5Z","^5[","^60","^61","^2F","^2R","^37","^3:","^62"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^63","^64","^7",365,"^9",365,"^K",["^L",["^5J",["^L",[["~$f","^67","~$dirty?","~$nocache?","~$watching","^68","~$auto-run","~$caught"]]]]],"^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^3:","^62"]],"^W","Positional factory function for reagent.ratom/Reaction."],"^5V",["^G",["^5W","^5X","^5Y","^5Z","^5[","^60","^61","^2F","^2R","^37","^3:","^62"]],"^O","^2O","^6","reagent/ratom.cljs","^:",18,"^5M",["^L",[["~$f","^67","^6T","^6U","^6V","^68","^6W","^6X"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^63","^64","^7",365,"^5Q","^3B","^9",365,"^5S",8,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f","^67","^6T","^6U","^6V","^68","^6W","^6X"]]]]],"^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^3:","^62"]],"^W","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",601,"^8",7,"^9",601,"^:",19,"^K",["^L",["^5J",["^L",[["~$value","~$callback-fn","^6@"]]]]]],"^O","^2C","^6","reagent/ratom.cljs","^:",19,"^5M",["^L",[["^6Z","^6[","^6@"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",601,"^5Q","^2K","^9",601,"^5S",3,"^5T",true,"^K",["^L",["^5J",["^L",[["^6Z","^6[","^6@"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",135,"~:protocol-info",["^ ","^6N",["^ "]],"^9",135,"~:sigs",["^ "],"~:jsdoc",["^L",["@interface"]]],"^71",true,"^O","^2F","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",135,"^72",["^ ","^6N",["^ "]],"~:info",null,"^9",135,"^6G","^5R","^73",["^ "],"~:impls",["^G",["^2B","^39","^3B","^3C"]],"^74",["^L",["@interface"]]],"~$track",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",247,"^8",7,"^9",247,"^:",12,"^K",["^L",["^5J",["^L",[["~$f","~$&","^6@"]]]]],"^6L",["^ ","^5P",true,"^6M",1,"^5S",1,"^5M",[["^L",["~$f","^6@"]]],"^K",["^L",[["~$f","~$&","^6@"]]],"^5O",["^L",[null]]]],"^O","^2G","^6","reagent/ratom.cljs","^:",12,"^6L",["^ ","^5P",true,"^6M",1,"^5S",1,"^5M",[["^L",["~$f","^6@"]]],"^K",["^L",[["~$f","~$&","^6@"]]],"^5O",["^L",[null]]],"^5M",[["^L",["~$f","^6@"]]],"^5N",null,"^6M",1,"^5O",["^L",[null]],"^8",1,"^5P",true,"^6N",[["^ ","^6M",1,"^5P",true,"^6G","^39"]],"^7",247,"^5Q","^5R","^9",247,"^5S",1,"^5T",true,"^K",["^L",[["~$f","~$&","^6@"]]]],"~$dispose!",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",347,"^8",4,"^9",347,"^:",12,"~:protocol","^37","^W",null,"^K",["^L",["^5J",["^L",[["^6P"]]]]]],"^79","^37","^O","^2N","^6","reagent/ratom.cljs","^:",12,"^5M",["^L",[["^6P"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",346,"^5Q","^5R","^9",347,"^5S",1,"^5T",true,"^K",["^L",["^5J",["^L",[["^6P"]]]]],"^W",null],"~$arr-eq",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",27,"^8",17,"^9",27,"^:",23,"^6G","~$boolean","^5I",true,"^K",["^L",["^5J",["^L",[["~$x","~$y"]]]]]],"^5I",true,"^O","^2X","^6","reagent/ratom.cljs","^:",23,"^5M",["^L",[["~$x","~$y"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",27,"^5Q","^7;","^9",27,"^5S",2,"^6G","^7;","^5T",true,"^K",["^L",["^5J",["^L",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",353,"^8",8,"^9",353,"^:",30,"^5I",true,"^K",["^L",["^5J",["^L",[["^6P","~$sender","^6Q","^6R"]]]]]],"^5I",true,"^O","^2Y","^6","reagent/ratom.cljs","^:",30,"^5M",["^L",[["^6P","^7=","^6Q","^6R"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",353,"^5Q","^5R","^9",353,"^5S",4,"^5T",true,"^K",["^L",["^5J",["^L",[["^6P","^7=","^6Q","^6R"]]]]]],"~$run",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",351,"^8",4,"^9",351,"^:",7,"^79","^2R","^W",null,"^K",["^L",["^5J",["^L",[["^6P"]]]]]],"^79","^2R","^O","^1W","^6","reagent/ratom.cljs","^:",7,"^5M",["^L",[["^6P"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",350,"^5Q","^5R","^9",351,"^5S",1,"^5T",true,"^K",["^L",["^5J",["^L",[["^6P"]]]]],"^W",null],"~$add-on-dispose!",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",348,"^8",4,"^9",348,"^:",19,"^79","^37","^W",null,"^K",["^L",["^5J",["^L",[["^6P","~$f"]]]]]],"^79","^37","^O","^2U","^6","reagent/ratom.cljs","^:",19,"^5M",["^L",[["^6P","~$f"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",346,"^5Q","^5R","^9",348,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["^6P","~$f"]]]]],"^W",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",524,"^8",16,"^9",524,"^:",29,"^5I",true],"^5I",true,"^O","^2[","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",524,"^9",524,"^6G","^3B"],"~$make-track!",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",240,"^8",7,"^9",240,"^:",18,"^K",["^L",["^5J",["^L",[["~$f","^6@"]]]]]],"^O","^1V","^6","reagent/ratom.cljs","^:",18,"^5M",["^L",[["~$f","^6@"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",240,"^5Q","^5R","^9",240,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f","^6@"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",30,"^5I",true],"^5I",true,"^O","^1U","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",12,"^9",12,"^6G","~$number"],"~$run-in-reaction",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",527,"^8",7,"^9",527,"^:",22,"^K",["^L",["^5J",["^L",[["~$f","^11","~$key","^7>","^5L"]]]]],"^W","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^O","^32","^6","reagent/ratom.cljs","^:",22,"^5M",["^L",[["~$f","^11","^7E","^7>","^5L"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",527,"^5Q","^5R","^9",527,"^5S",5,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f","^11","^7E","^7>","^5L"]]]]],"^W","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^71",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",346,"^72",["^ ","^6N",["^ ","^78",[["^6P"]],"^7?",[["^6P","~$f"]]]],"^9",346,"^73",["^ ","~:dispose!",["^ ","^O","^78","^K",["^L",[["^6P"]]],"^W",null],"~:add-on-dispose!",["^ ","^O","^7?","^K",["^L",[["^6P","~$f"]]],"^W",null]],"^74",["^L",["@interface"]]],"^71",true,"^O","^37","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",346,"^72",["^ ","^6N",["^ ","^78",[["^6P"]],"^7?",[["^6P","~$f"]]]],"^75",null,"^9",346,"^6G","^5R","^73",["^ ","^7G",["^ ","^O","^78","^K",["^L",[["^6P"]]],"^W",null],"^7H",["^ ","^O","^7?","^K",["^L",[["^6P","~$f"]]],"^W",null]],"^76",["^G",["^3B"]],"^74",["^L",["@interface"]]],"~$check-watches",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",74,"^8",8,"^9",74,"^:",21,"^5I",true,"^K",["^L",["^5J",["^L",[["^6Q","^6R"]]]]]],"^5I",true,"^O","^2<","^6","reagent/ratom.cljs","^:",21,"^5M",["^L",[["^6Q","^6R"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",74,"^9",74,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["^6Q","^6R"]]]]]],"~$with-let-destroy",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",333,"^8",7,"^9",333,"^:",23,"^K",["^L",["^5J",["^L",[["~$v"]]]]]],"^O","^2=","^6","reagent/ratom.cljs","^:",23,"^5M",["^L",[["~$v"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",333,"^5Q",["^G",["^5R","^6<"]],"^9",333,"^5S",1,"^5T",true,"^K",["^L",["^5J",["^L",[["~$v"]]]]]],"~$make-reaction",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",515,"^8",7,"^9",515,"^:",20,"^K",["^L",["^5J",["^L",[["~$f","~$&",["^ ","^6I",["^6W","~$on-set","~$on-dispose"]]]]]]],"^6L",["^ ","^5P",true,"^6M",1,"^5S",1,"^5M",[["^L",["~$f",["^ ","^6I",["^6W","^7L","^7M"]]]]],"^K",["^L",[["~$f","~$&",["^ ","^6I",["^6W","^7L","^7M"]]]]],"^5O",["^L",[null]]]],"^O","^2Q","^6","reagent/ratom.cljs","^:",20,"^6L",["^ ","^5P",true,"^6M",1,"^5S",1,"^5M",[["^L",["~$f",["^ ","^6I",["^6W","^7L","^7M"]]]]],"^K",["^L",[["~$f","~$&",["^ ","^6I",["^6W","^7L","^7M"]]]]],"^5O",["^L",[null]]],"^5M",[["^L",["~$f",["^ ","^6I",["^6W","^7L","^7M"]]]]],"^5N",null,"^6M",1,"^5O",["^L",[null]],"^8",1,"^5P",true,"^6N",[["^ ","^6M",1,"^5P",true,"^6G","^3B"]],"^7",515,"^5Q","^5R","^9",515,"^5S",1,"^5T",true,"^K",["^L",[["~$f","~$&",["^ ","^6I",["^6W","^7L","^7M"]]]]]],"~$add-w",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",79,"^8",8,"^9",79,"^:",13,"^5I",true,"^K",["^L",["^5J",["^L",[["^6P","^7E","~$f"]]]]]],"^5I",true,"^O","^3>","^6","reagent/ratom.cljs","^:",13,"^5M",["^L",[["^6P","^7E","~$f"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",79,"^9",79,"^5S",3,"^5T",true,"^K",["^L",["^5J",["^L",[["^6P","^7E","~$f"]]]]]],"~$Reaction",["^ ","^6B",8,"^5V",["^G",["^5W","^5X","^5Y","^5Z","^5[","^60","^61","^2F","^2R","^37","^3:","^62"]],"^O","^3B","^6","reagent/ratom.cljs","^:",18,"^6E",true,"^8",10,"^7",365,"^6F",false,"^9",365,"^6G","^6H","^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^3:","^62"]]],"~$flush!",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",121,"^8",7,"^9",121,"^:",13,"^K",["^L",["^5J",["^L",[[]]]]]],"^O","^29","^6","reagent/ratom.cljs","^:",13,"^5M",["^L",[[]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",121,"^5Q","^6<","^9",121,"^5S",0,"^5T",true,"^K",["^L",["^5J",["^L",[[]]]]]],"~$RCursor",["^ ","^6B",5,"^5V",["^G",["^5W","^5X","^5Y","^5Z","^5[","^60","^61","^2F","^3:","^62"]],"^O","^2B","^6","reagent/ratom.cljs","^:",17,"^6E",true,"^8",10,"^7",257,"^6F",false,"^9",257,"^6G","^6H","^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^3:","^62"]]],"~$cached-reaction",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",192,"^8",8,"^9",192,"^:",23,"^5I",true,"^K",["^L",["^5J",["^L",[["~$f","~$o","~$k","^11","~$destroy"]]]]]],"^5I",true,"^O","^2J","^6","reagent/ratom.cljs","^:",23,"^5M",["^L",[["~$f","~$o","~$k","^11","^7S"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",192,"^5Q","^5R","^9",192,"^5S",5,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f","~$o","~$k","^11","^7S"]]]]]],"~$Track",["^ ","^6B",3,"^5V",["^G",["^5Y","^5Z","^2F","^3:","^62"]],"^O","^39","^6","reagent/ratom.cljs","^:",15,"^6E",true,"^8",10,"^7",216,"^6F",false,"^9",216,"^6G","^6H","^69",["^G",["^5Y","^5Z","^3:","^62"]]],"~$debug",["^ ","^O","^2@","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",24,"^6G","^7;","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",19,"^9",11,"^:",24,"^6G","^7;"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",20,"^9",13,"^:",28,"^5I",true],"^5I",true,"^O","^3A","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",13,"^9",13,"^6G","~$cljs.core/Atom"],"~$cursor",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",319,"^8",7,"^9",319,"^:",13,"^K",["^L",["^5J",["^L",[["~$src","^66"]]]]]],"^O","^3;","^6","reagent/ratom.cljs","^:",13,"^5M",["^L",[["^7Y","^66"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",319,"^5Q","^2B","^9",319,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["^7Y","^66"]]]]]],"~$Wrapper",["^ ","^6B",4,"^5V",["^G",["^5W","^5X","^5Y","^60","^61","^3:","^62"]],"^O","^2K","^6","reagent/ratom.cljs","^:",17,"^6E",true,"^8",10,"^7",554,"^6F",false,"^9",554,"^6G","^6H","^69",["^G",["^5W","^5X","^5Y","^60","^61","^3:","^62"]]],"~$running",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",21,"^8",7,"^9",21,"^:",14,"^K",["^L",["^5J",["^L",[[]]]]]],"^O","^2P","^6","reagent/ratom.cljs","^:",14,"^5M",["^L",[[]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",21,"^5Q","^5R","^9",21,"^5S",0,"^5T",true,"^K",["^L",["^5J",["^L",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^71",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",350,"^72",["^ ","^6N",["^ ","^7>",[["^6P"]]]],"^9",350,"^73",["^ ","~:run",["^ ","^O","^7>","^K",["^L",[["^6P"]]],"^W",null]],"^74",["^L",["@interface"]]],"^71",true,"^O","^2R","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",350,"^72",["^ ","^6N",["^ ","^7>",[["^6P"]]]],"^75",null,"^9",350,"^6G","^5R","^73",["^ ","^81",["^ ","^O","^7>","^K",["^L",[["^6P"]]],"^W",null]],"^76",["^G",["^3B"]],"^74",["^L",["@interface"]]],"~$reactive?",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",16,"^9",15,"^:",25,"^6G","^7;","^K",["^L",["^5J",["^L",[[]]]]]],"^O","^3D","^6","reagent/ratom.cljs","^:",25,"^5M",["^L",[[]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",15,"^5Q","^7;","^9",15,"^5S",0,"^6G","^7;","^5T",true,"^K",["^L",["^5J",["^L",[[]]]]]],"~$deref-capture",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",44,"^8",8,"^9",44,"^:",21,"^5I",true,"^K",["^L",["^5J",["^L",[["~$f","~$r"]]]]],"^W","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^5I",true,"^O","^3F","^6","reagent/ratom.cljs","^:",21,"^5M",["^L",[["~$f","~$r"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",44,"^5Q","^5R","^9",44,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f","~$r"]]]]],"^W","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",113,"^8",20,"^9",113,"^:",29,"^5I",true],"^5I",true,"^O","^2T","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",113,"^9",113,"^6G","^6<"],"~$with-let-values",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",337,"^8",7,"^9",337,"^:",22,"^K",["^L",["^5J",["^L",[["^7E"]]]]]],"^O","^3J","^6","reagent/ratom.cljs","^:",22,"^5M",["^L",[["^7E"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",337,"^5Q",["^G",["^5R","~$array"]],"^9",337,"^5S",1,"^5T",true,"^K",["^L",["^5J",["^L",[["^7E"]]]]]],"~$track!",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",251,"^8",7,"^9",251,"^:",13,"^K",["^L",["^5J",["^L",[["~$f","~$&","^6@"]]]]],"^6L",["^ ","^5P",true,"^6M",1,"^5S",1,"^5M",[["^L",["~$f","^6@"]]],"^K",["^L",[["~$f","~$&","^6@"]]],"^5O",["^L",[null]]]],"^O","^2M","^6","reagent/ratom.cljs","^:",13,"^6L",["^ ","^5P",true,"^6M",1,"^5S",1,"^5M",[["^L",["~$f","^6@"]]],"^K",["^L",[["~$f","~$&","^6@"]]],"^5O",["^L",[null]]],"^5M",[["^L",["~$f","^6@"]]],"^5N",null,"^6M",1,"^5O",["^L",[null]],"^8",1,"^5P",true,"^6N",[["^ ","^6M",1,"^5P",true,"^6G","^5R"]],"^7",251,"^5Q","^5R","^9",251,"^5S",1,"^5T",true,"^K",["^L",[["~$f","~$&","^6@"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",20,"^9",10,"^:",35,"~:dynamic",true,"~:declared",true],"^O","^36","^6","reagent/ratom.cljs","^:",35,"^8",1,"^89",true,"^7",10,"^8:",true,"^9",10,"^6G","^5R"],"~$check-derefs",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",546,"^8",7,"^9",546,"^:",19,"^K",["^L",["^5J",["^L",[["~$f"]]]]]],"^O","^1T","^6","reagent/ratom.cljs","^:",19,"^5M",["^L",[["~$f"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",546,"^5Q","~$cljs.core/IVector","^9",546,"^5S",1,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f"]]]]]],"~$remove-w",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",84,"^8",8,"^9",84,"^:",16,"^5I",true,"^K",["^L",["^5J",["^L",[["^6P","^7E"]]]]]],"^5I",true,"^O","^1X","^6","reagent/ratom.cljs","^:",16,"^5M",["^L",[["^6P","^7E"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",84,"^9",84,"^5S",2,"^5T",true,"^K",["^L",["^5J",["^L",[["^6P","^7E"]]]]]],"~$->Wrapper",["^ ","^5H",null,"^5",["^ ","^5V",["^G",["^5W","^5X","^5Y","^60","^61","^3:","^62"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^63","^64","^7",554,"^9",554,"^K",["^L",["^5J",["^L",[["^67","~$callback","~$changed","^68"]]]]],"^69",["^G",["^5W","^5X","^5Y","^60","^61","^3:","^62"]],"^W","Positional factory function for reagent.ratom/Wrapper."],"^5V",["^G",["^5W","^5X","^5Y","^60","^61","^3:","^62"]],"^O","^38","^6","reagent/ratom.cljs","^:",17,"^5M",["^L",[["^67","^8?","^8@","^68"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^63","^64","^7",554,"^5Q","^2K","^9",554,"^5S",4,"^5T",true,"^K",["^L",["^5J",["^L",[["^67","^8?","^8@","^68"]]]]],"^69",["^G",["^5W","^5X","^5Y","^60","^61","^3:","^62"]],"^W","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^5H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",24,"^8",16,"^9",24,"^:",23,"^6G","^7C","^5I",true,"^K",["^L",["^5J",["^L",[["~$x"]]]]]],"^5I",true,"^O","^26","^6","reagent/ratom.cljs","^:",23,"^5M",["^L",[["~$x"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^7",24,"^5Q","^7C","^9",24,"^5S",1,"^6G","^7C","^5T",true,"^K",["^L",["^5J",["^L",[["~$x"]]]]]],"~$->RAtom",["^ ","^5H",null,"^5",["^ ","^5V",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^2F","^6C","^3:","^62","^6D"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^63","^64","^7",137,"^9",137,"^K",["^L",["^5J",["^L",[["^67","^6J","^6K","^68"]]]]],"^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^6C","^3:","^62","^6D"]],"^W","Positional factory function for reagent.ratom/RAtom."],"^5V",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^2F","^6C","^3:","^62","^6D"]],"^O","^1Z","^6","reagent/ratom.cljs","^:",15,"^5M",["^L",[["^67","^6J","^6K","^68"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^63","^64","^7",137,"^5Q","^3C","^9",137,"^5S",4,"^5T",true,"^K",["^L",["^5J",["^L",[["^67","^6J","^6K","^68"]]]]],"^69",["^G",["^5W","^5X","^5Y","^5Z","^60","^61","^6C","^3:","^62","^6D"]],"^W","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^5H",null,"^5",["^ ","^5V",["^G",["^5Y","^5Z","^2F","^3:","^62"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^63","^64","^7",216,"^9",216,"^K",["^L",["^5J",["^L",[["~$f","^6@","^T"]]]]],"^69",["^G",["^5Y","^5Z","^3:","^62"]],"^W","Positional factory function for reagent.ratom/Track."],"^5V",["^G",["^5Y","^5Z","^2F","^3:","^62"]],"^O","^33","^6","reagent/ratom.cljs","^:",15,"^5M",["^L",[["~$f","^6@","^T"]]],"^5N",null,"^5O",["^L",[null,null]],"^8",1,"^5P",false,"^63","^64","^7",216,"^5Q","^39","^9",216,"^5S",3,"^5T",true,"^K",["^L",["^5J",["^L",[["~$f","^6@","^T"]]]]],"^69",["^G",["^5Y","^5Z","^3:","^62"]],"^W","Positional factory function for reagent.ratom/Track."]],"^1;",["^ ","^R","^R","^D","^D","^13","^13"],"~:cljs.analyzer/constants",["^ ","^19",["^G",["~:on-set","^6X","^6V","^7;","^T","^8?","^5","~:else","^66","^6@","~:validator","^68","^6J","^6K","^6T","~:no-cache","^65","^67","~:auto-run","~:on-dispose","^6G","~:mutable","^8@","^6W","^6U","~$f"]],"~:order",["^67","^8K","^6J","^6K","^68","^5","^8G","^8F","^8J","~$f","^6@","^T","^8I","^65","^66","^8E","^8H","^6T","^6G","^7;","^6U","^6V","^6W","^6X","^8?","^8@"]],"^1C",["^ ","^1;",["^G",[]],"^1:",["^G",[]]],"^1D",["^ "],"^1E",["^14","^13","^10","^D","^15","^16","^12"]],"^Q","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^3P",[["^8O","~:static-fns"],true,["^8O","~:shadow-tweaks"],null,["^8O","~:source-map-inline"],null,["^8O","~:elide-asserts"],true,["^8O","~:optimize-constants"],null,["^8O","^1J"],null,["^8O","~:external-config"],null,["^8O","~:tooling-config"],null,["^8O","~:emit-constants"],null,["^8O","~:load-tests"],false,["^8O","~:form-size-threshold"],null,["^8O","~:infer-externs"],true,["^8O","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^8O","~:fn-invoke-direct"],null,["^8O","~:source-map"],null]]]